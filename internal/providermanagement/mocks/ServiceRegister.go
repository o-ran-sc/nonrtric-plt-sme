// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ServiceRegister is an autogenerated mock type for the ServiceRegister type
type ServiceRegister struct {
	mock.Mock
}

// IsFunctionRegistered provides a mock function with given fields: aefId
func (_m *ServiceRegister) IsFunctionRegistered(aefId string) bool {
	ret := _m.Called(aefId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(aefId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewServiceRegister interface {
	mock.TestingT
	Cleanup(func())
}

// NewServiceRegister creates a new instance of ServiceRegister. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewServiceRegister(t mockConstructorTestingTNewServiceRegister) *ServiceRegister {
	mock := &ServiceRegister{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
