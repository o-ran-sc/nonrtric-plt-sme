// Package common29571 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.10.1 DO NOT EDIT.
package common29571

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"encoding/json"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "oransc.org/nonrtric/capifcore/internal/common"
)

// Defines values for AccessType.
const (
	AccessTypeN3GPPACCESS AccessType = "3GPP_ACCESS"

	AccessTypeNON3GPPACCESS AccessType = "NON_3GPP_ACCESS"
)

// Defines values for AuthStatus.
const (
	AuthStatusEAPFAILURE AuthStatus = "EAP_FAILURE"

	AuthStatusEAPSUCCESS AuthStatus = "EAP_SUCCESS"

	AuthStatusPENDING AuthStatus = "PENDING"
)

// Defines values for BroadcastDeliveryStatus.
const (
	BroadcastDeliveryStatusACTIVATED BroadcastDeliveryStatus = "ACTIVATED"

	BroadcastDeliveryStatusTERMINATED BroadcastDeliveryStatus = "TERMINATED"
)

// Defines values for ChangeType.
const (
	ChangeTypeADD ChangeType = "ADD"

	ChangeTypeMOVE ChangeType = "MOVE"

	ChangeTypeREMOVE ChangeType = "REMOVE"

	ChangeTypeREPLACE ChangeType = "REPLACE"
)

// Defines values for CollectionPeriodRmmLteMdt.
const (
	CollectionPeriodRmmLteMdtN1024 CollectionPeriodRmmLteMdt = "1024"

	CollectionPeriodRmmLteMdtN10240 CollectionPeriodRmmLteMdt = "10240"

	CollectionPeriodRmmLteMdtN1280 CollectionPeriodRmmLteMdt = "1280"

	CollectionPeriodRmmLteMdtN2048 CollectionPeriodRmmLteMdt = "2048"

	CollectionPeriodRmmLteMdtN2560 CollectionPeriodRmmLteMdt = "2560"

	CollectionPeriodRmmLteMdtN5120 CollectionPeriodRmmLteMdt = "5120"

	CollectionPeriodRmmLteMdtN60000 CollectionPeriodRmmLteMdt = "60000"
)

// Defines values for CollectionPeriodRmmNrMdt.
const (
	CollectionPeriodRmmNrMdtN1024 CollectionPeriodRmmNrMdt = "1024"

	CollectionPeriodRmmNrMdtN10240 CollectionPeriodRmmNrMdt = "10240"

	CollectionPeriodRmmNrMdtN2048 CollectionPeriodRmmNrMdt = "2048"

	CollectionPeriodRmmNrMdtN5120 CollectionPeriodRmmNrMdt = "5120"

	CollectionPeriodRmmNrMdtN60000 CollectionPeriodRmmNrMdt = "60000"
)

// Defines values for CoreNetworkType.
const (
	CoreNetworkTypeEPC CoreNetworkType = "EPC"

	CoreNetworkTypeN5GC CoreNetworkType = "5GC"
)

// Defines values for DlDataDeliveryStatus.
const (
	DlDataDeliveryStatusBUFFERED DlDataDeliveryStatus = "BUFFERED"

	DlDataDeliveryStatusDISCARDED DlDataDeliveryStatus = "DISCARDED"

	DlDataDeliveryStatusTRANSMITTED DlDataDeliveryStatus = "TRANSMITTED"
)

// Defines values for DnaiChangeType.
const (
	DnaiChangeTypeEARLY DnaiChangeType = "EARLY"

	DnaiChangeTypeEARLYLATE DnaiChangeType = "EARLY_LATE"

	DnaiChangeTypeLATE DnaiChangeType = "LATE"
)

// Defines values for EventForMdt.
const (
	EventForMdtA2EVENT EventForMdt = "A2_EVENT"

	EventForMdtOUTOFCOVERAG EventForMdt = "OUT_OF_COVERAG"
)

// Defines values for HttpMethod.
const (
	HttpMethodCONNECT HttpMethod = "CONNECT"

	HttpMethodDELETE HttpMethod = "DELETE"

	HttpMethodGET HttpMethod = "GET"

	HttpMethodHEAD HttpMethod = "HEAD"

	HttpMethodOPTIONS HttpMethod = "OPTIONS"

	HttpMethodPATCH HttpMethod = "PATCH"

	HttpMethodPOST HttpMethod = "POST"

	HttpMethodPUT HttpMethod = "PUT"

	HttpMethodTRACE HttpMethod = "TRACE"
)

// Defines values for JobType.
const (
	JobTypeIMMEDIATEMDTANDTRACE JobType = "IMMEDIATE_MDT_AND_TRACE"

	JobTypeIMMEDIATEMDTONLY JobType = "IMMEDIATE_MDT_ONLY"

	JobTypeLOGGEDMBSFNMDT JobType = "LOGGED_MBSFN_MDT"

	JobTypeLOGGEDMDTONLY JobType = "LOGGED_MDT_ONLY"

	JobTypeRCEFREPORTSONLY JobType = "RCEF_REPORTS_ONLY"

	JobTypeRLFREPORTSONLY JobType = "RLF_REPORTS_ONLY"

	JobTypeTRACEONLY JobType = "TRACE_ONLY"
)

// Defines values for LcsServiceAuth.
const (
	LcsServiceAuthLOCATIONALLOWEDWITHNOTIFICATION LcsServiceAuth = "LOCATION_ALLOWED_WITH_NOTIFICATION"

	LcsServiceAuthLOCATIONALLOWEDWITHOUTNOTIFICATION LcsServiceAuth = "LOCATION_ALLOWED_WITHOUT_NOTIFICATION"

	LcsServiceAuthLOCATIONALLOWEDWITHOUTRESPONSE LcsServiceAuth = "LOCATION_ALLOWED_WITHOUT_RESPONSE"

	LcsServiceAuthLOCATIONRESTRICTEDWITHOUTRESPONSE LcsServiceAuth = "LOCATION_RESTRICTED_WITHOUT_RESPONSE"

	LcsServiceAuthNOTIFICATIONANDVERIFICATIONONLY LcsServiceAuth = "NOTIFICATION_AND_VERIFICATION_ONLY"

	LcsServiceAuthNOTIFICATIONONLY LcsServiceAuth = "NOTIFICATION_ONLY"
)

// Defines values for LineType.
const (
	LineTypeDSL LineType = "DSL"

	LineTypePON LineType = "PON"
)

// Defines values for LoggingDurationMdt.
const (
	LoggingDurationMdtN1200 LoggingDurationMdt = "1200"

	LoggingDurationMdtN2400 LoggingDurationMdt = "2400"

	LoggingDurationMdtN3600 LoggingDurationMdt = "3600"

	LoggingDurationMdtN5400 LoggingDurationMdt = "5400"

	LoggingDurationMdtN600 LoggingDurationMdt = "600"

	LoggingDurationMdtN7200 LoggingDurationMdt = "7200"
)

// Defines values for LoggingDurationNrMdt.
const (
	LoggingDurationNrMdtN1200 LoggingDurationNrMdt = "1200"

	LoggingDurationNrMdtN2400 LoggingDurationNrMdt = "2400"

	LoggingDurationNrMdtN3600 LoggingDurationNrMdt = "3600"

	LoggingDurationNrMdtN5400 LoggingDurationNrMdt = "5400"

	LoggingDurationNrMdtN600 LoggingDurationNrMdt = "600"

	LoggingDurationNrMdtN7200 LoggingDurationNrMdt = "7200"
)

// Defines values for LoggingIntervalMdt.
const (
	LoggingIntervalMdtN1024 LoggingIntervalMdt = "1024"

	LoggingIntervalMdtN128 LoggingIntervalMdt = "128"

	LoggingIntervalMdtN2048 LoggingIntervalMdt = "2048"

	LoggingIntervalMdtN256 LoggingIntervalMdt = "256"

	LoggingIntervalMdtN3072 LoggingIntervalMdt = "3072"

	LoggingIntervalMdtN4096 LoggingIntervalMdt = "4096"

	LoggingIntervalMdtN512 LoggingIntervalMdt = "512"

	LoggingIntervalMdtN6144 LoggingIntervalMdt = "6144"
)

// Defines values for LoggingIntervalNrMdt.
const (
	LoggingIntervalNrMdtInfinity LoggingIntervalNrMdt = "infinity"

	LoggingIntervalNrMdtN1024 LoggingIntervalNrMdt = "1024"

	LoggingIntervalNrMdtN128 LoggingIntervalNrMdt = "128"

	LoggingIntervalNrMdtN2048 LoggingIntervalNrMdt = "2048"

	LoggingIntervalNrMdtN256 LoggingIntervalNrMdt = "256"

	LoggingIntervalNrMdtN3072 LoggingIntervalNrMdt = "3072"

	LoggingIntervalNrMdtN320 LoggingIntervalNrMdt = "320"

	LoggingIntervalNrMdtN4096 LoggingIntervalNrMdt = "4096"

	LoggingIntervalNrMdtN512 LoggingIntervalNrMdt = "512"

	LoggingIntervalNrMdtN6144 LoggingIntervalNrMdt = "6144"

	LoggingIntervalNrMdtN640 LoggingIntervalNrMdt = "640"
)

// Defines values for MatchingOperator.
const (
	MatchingOperatorCONTAINS MatchingOperator = "CONTAINS"

	MatchingOperatorENDSWITH MatchingOperator = "ENDS_WITH"

	MatchingOperatorFULLMATCH MatchingOperator = "FULL_MATCH"

	MatchingOperatorMATCHALL MatchingOperator = "MATCH_ALL"

	MatchingOperatorNOTCONTAIN MatchingOperator = "NOT_CONTAIN"

	MatchingOperatorNOTENDWITH MatchingOperator = "NOT_END_WITH"

	MatchingOperatorNOTSTARTWITH MatchingOperator = "NOT_START_WITH"

	MatchingOperatorSTARTSWITH MatchingOperator = "STARTS_WITH"
)

// Defines values for MbsServiceType.
const (
	MbsServiceTypeBROADCAST MbsServiceType = "BROADCAST"

	MbsServiceTypeMULTICAST MbsServiceType = "MULTICAST"
)

// Defines values for MbsSessionActivityStatus.
const (
	MbsSessionActivityStatusACTIVE MbsSessionActivityStatus = "ACTIVE"

	MbsSessionActivityStatusINACTIVE MbsSessionActivityStatus = "INACTIVE"
)

// Defines values for MbsSessionEventType.
const (
	MbsSessionEventTypeBROADCASTDELIVERYSTATUS MbsSessionEventType = "BROADCAST_DELIVERY_STATUS"

	MbsSessionEventTypeINGRESSTUNNELADDCHANGE MbsSessionEventType = "INGRESS_TUNNEL_ADD_CHANGE"

	MbsSessionEventTypeMBSRELTMGIEXPIRY MbsSessionEventType = "MBS_REL_TMGI_EXPIRY"
)

// Defines values for MeasurementLteForMdt.
const (
	MeasurementLteForMdtM1 MeasurementLteForMdt = "M1"

	MeasurementLteForMdtM2 MeasurementLteForMdt = "M2"

	MeasurementLteForMdtM3 MeasurementLteForMdt = "M3"

	MeasurementLteForMdtM4DL MeasurementLteForMdt = "M4_DL"

	MeasurementLteForMdtM4UL MeasurementLteForMdt = "M4_UL"

	MeasurementLteForMdtM5DL MeasurementLteForMdt = "M5_DL"

	MeasurementLteForMdtM5UL MeasurementLteForMdt = "M5_UL"

	MeasurementLteForMdtM6DL MeasurementLteForMdt = "M6_DL"

	MeasurementLteForMdtM6UL MeasurementLteForMdt = "M6_UL"

	MeasurementLteForMdtM7DL MeasurementLteForMdt = "M7_DL"

	MeasurementLteForMdtM7UL MeasurementLteForMdt = "M7_UL"

	MeasurementLteForMdtM8 MeasurementLteForMdt = "M8"

	MeasurementLteForMdtM9 MeasurementLteForMdt = "M9"
)

// Defines values for MeasurementNrForMdt.
const (
	MeasurementNrForMdtM1 MeasurementNrForMdt = "M1"

	MeasurementNrForMdtM2 MeasurementNrForMdt = "M2"

	MeasurementNrForMdtM3 MeasurementNrForMdt = "M3"

	MeasurementNrForMdtM4DL MeasurementNrForMdt = "M4_DL"

	MeasurementNrForMdtM4UL MeasurementNrForMdt = "M4_UL"

	MeasurementNrForMdtM5DL MeasurementNrForMdt = "M5_DL"

	MeasurementNrForMdtM5UL MeasurementNrForMdt = "M5_UL"

	MeasurementNrForMdtM6DL MeasurementNrForMdt = "M6_DL"

	MeasurementNrForMdtM6UL MeasurementNrForMdt = "M6_UL"

	MeasurementNrForMdtM7DL MeasurementNrForMdt = "M7_DL"

	MeasurementNrForMdtM7UL MeasurementNrForMdt = "M7_UL"

	MeasurementNrForMdtM8 MeasurementNrForMdt = "M8"

	MeasurementNrForMdtM9 MeasurementNrForMdt = "M9"
)

// Defines values for MeasurementPeriodLteMdt.
const (
	MeasurementPeriodLteMdtN1024 MeasurementPeriodLteMdt = "1024"

	MeasurementPeriodLteMdtN10240 MeasurementPeriodLteMdt = "10240"

	MeasurementPeriodLteMdtN1280 MeasurementPeriodLteMdt = "1280"

	MeasurementPeriodLteMdtN2048 MeasurementPeriodLteMdt = "2048"

	MeasurementPeriodLteMdtN2560 MeasurementPeriodLteMdt = "2560"

	MeasurementPeriodLteMdtN5120 MeasurementPeriodLteMdt = "5120"

	MeasurementPeriodLteMdtN60000 MeasurementPeriodLteMdt = "60000"
)

// Defines values for NotificationControl.
const (
	NotificationControlNOTREQUESTED NotificationControl = "NOT_REQUESTED"

	NotificationControlREQUESTED NotificationControl = "REQUESTED"
)

// Defines values for NotificationFlag.
const (
	NotificationFlagACTIVATE NotificationFlag = "ACTIVATE"

	NotificationFlagDEACTIVATE NotificationFlag = "DEACTIVATE"

	NotificationFlagRETRIEVAL NotificationFlag = "RETRIEVAL"
)

// Defines values for PartitioningCriteria.
const (
	PartitioningCriteriaDNN PartitioningCriteria = "DNN"

	PartitioningCriteriaGEOAREA PartitioningCriteria = "GEOAREA"

	PartitioningCriteriaSNSSAI PartitioningCriteria = "SNSSAI"

	PartitioningCriteriaSUBPLMN PartitioningCriteria = "SUBPLMN"

	PartitioningCriteriaTAC PartitioningCriteria = "TAC"
)

// Defines values for PatchOperation.
const (
	PatchOperationAdd PatchOperation = "add"

	PatchOperationCopy PatchOperation = "copy"

	PatchOperationMove PatchOperation = "move"

	PatchOperationRemove PatchOperation = "remove"

	PatchOperationReplace PatchOperation = "replace"

	PatchOperationTest PatchOperation = "test"
)

// Defines values for PduSessionType.
const (
	PduSessionTypeETHERNET PduSessionType = "ETHERNET"

	PduSessionTypeIPV4 PduSessionType = "IPV4"

	PduSessionTypeIPV4V6 PduSessionType = "IPV4V6"

	PduSessionTypeIPV6 PduSessionType = "IPV6"

	PduSessionTypeUNSTRUCTURED PduSessionType = "UNSTRUCTURED"
)

// Defines values for PositioningMethodMdt.
const (
	PositioningMethodMdtECELLID PositioningMethodMdt = "E_CELL_ID"

	PositioningMethodMdtGNSS PositioningMethodMdt = "GNSS"
)

// Defines values for PreemptionCapability.
const (
	PreemptionCapabilityMAYPREEMPT PreemptionCapability = "MAY_PREEMPT"

	PreemptionCapabilityNOTPREEMPT PreemptionCapability = "NOT_PREEMPT"
)

// Defines values for PreemptionVulnerability.
const (
	PreemptionVulnerabilityNOTPREEMPTABLE PreemptionVulnerability = "NOT_PREEMPTABLE"

	PreemptionVulnerabilityPREEMPTABLE PreemptionVulnerability = "PREEMPTABLE"
)

// Defines values for PresenceState.
const (
	PresenceStateINACTIVE PresenceState = "INACTIVE"

	PresenceStateINAREA PresenceState = "IN_AREA"

	PresenceStateOUTOFAREA PresenceState = "OUT_OF_AREA"

	PresenceStateUNKNOWN PresenceState = "UNKNOWN"
)

// Defines values for QosResourceType.
const (
	QosResourceTypeCRITICALGBR QosResourceType = "CRITICAL_GBR"

	QosResourceTypeNONCRITICALGBR QosResourceType = "NON_CRITICAL_GBR"

	QosResourceTypeNONGBR QosResourceType = "NON_GBR"
)

// Defines values for RatType.
const (
	RatTypeEUTRA RatType = "EUTRA"

	RatTypeEUTRAU RatType = "EUTRA_U"

	RatTypeGERA RatType = "GERA"

	RatTypeLTEM RatType = "LTE-M"

	RatTypeNBIOT RatType = "NBIOT"

	RatTypeNR RatType = "NR"

	RatTypeNRGEO RatType = "NR_GEO"

	RatTypeNRLEO RatType = "NR_LEO"

	RatTypeNRMEO RatType = "NR_MEO"

	RatTypeNROTHERSAT RatType = "NR_OTHER_SAT"

	RatTypeNRREDCAP RatType = "NR_REDCAP"

	RatTypeNRU RatType = "NR_U"

	RatTypeTRUSTEDN3GA RatType = "TRUSTED_N3GA"

	RatTypeTRUSTEDWLAN RatType = "TRUSTED_WLAN"

	RatTypeUTRA RatType = "UTRA"

	RatTypeVIRTUAL RatType = "VIRTUAL"

	RatTypeWIRELINE RatType = "WIRELINE"

	RatTypeWIRELINEBBF RatType = "WIRELINE_BBF"

	RatTypeWIRELINECABLE RatType = "WIRELINE_CABLE"

	RatTypeWLAN RatType = "WLAN"
)

// Defines values for ReflectiveQoSAttribute.
const (
	ReflectiveQoSAttributeNORQOS ReflectiveQoSAttribute = "NO_RQOS"

	ReflectiveQoSAttributeRQOS ReflectiveQoSAttribute = "RQOS"
)

// Defines values for ReportAmountMdt.
const (
	ReportAmountMdtInfinity ReportAmountMdt = "infinity"

	ReportAmountMdtN1 ReportAmountMdt = "1"

	ReportAmountMdtN16 ReportAmountMdt = "16"

	ReportAmountMdtN2 ReportAmountMdt = "2"

	ReportAmountMdtN32 ReportAmountMdt = "32"

	ReportAmountMdtN4 ReportAmountMdt = "4"

	ReportAmountMdtN64 ReportAmountMdt = "64"

	ReportAmountMdtN8 ReportAmountMdt = "8"
)

// Defines values for ReportIntervalMdt.
const (
	ReportIntervalMdtN1024 ReportIntervalMdt = "1024"

	ReportIntervalMdtN10240 ReportIntervalMdt = "10240"

	ReportIntervalMdtN120 ReportIntervalMdt = "120"

	ReportIntervalMdtN1800000 ReportIntervalMdt = "1800000"

	ReportIntervalMdtN2048 ReportIntervalMdt = "2048"

	ReportIntervalMdtN240 ReportIntervalMdt = "240"

	ReportIntervalMdtN360000 ReportIntervalMdt = "360000"

	ReportIntervalMdtN3600000 ReportIntervalMdt = "3600000"

	ReportIntervalMdtN480 ReportIntervalMdt = "480"

	ReportIntervalMdtN5120 ReportIntervalMdt = "5120"

	ReportIntervalMdtN60000 ReportIntervalMdt = "60000"

	ReportIntervalMdtN640 ReportIntervalMdt = "640"

	ReportIntervalMdtN720000 ReportIntervalMdt = "720000"
)

// Defines values for ReportIntervalNrMdt.
const (
	ReportIntervalNrMdtN1024 ReportIntervalNrMdt = "1024"

	ReportIntervalNrMdtN10240 ReportIntervalNrMdt = "10240"

	ReportIntervalNrMdtN120 ReportIntervalNrMdt = "120"

	ReportIntervalNrMdtN1800000 ReportIntervalNrMdt = "1800000"

	ReportIntervalNrMdtN2048 ReportIntervalNrMdt = "2048"

	ReportIntervalNrMdtN20480 ReportIntervalNrMdt = "20480"

	ReportIntervalNrMdtN240 ReportIntervalNrMdt = "240"

	ReportIntervalNrMdtN360000 ReportIntervalNrMdt = "360000"

	ReportIntervalNrMdtN3600000 ReportIntervalNrMdt = "3600000"

	ReportIntervalNrMdtN40960 ReportIntervalNrMdt = "40960"

	ReportIntervalNrMdtN480 ReportIntervalNrMdt = "480"

	ReportIntervalNrMdtN5120 ReportIntervalNrMdt = "5120"

	ReportIntervalNrMdtN60000 ReportIntervalNrMdt = "60000"

	ReportIntervalNrMdtN640 ReportIntervalNrMdt = "640"

	ReportIntervalNrMdtN720000 ReportIntervalNrMdt = "720000"
)

// Defines values for ReportTypeMdt.
const (
	ReportTypeMdtEVENTTRIGGED ReportTypeMdt = "EVENT_TRIGGED"

	ReportTypeMdtPERIODICAL ReportTypeMdt = "PERIODICAL"
)

// Defines values for ReportingTrigger.
const (
	ReportingTriggerALLRRMEVENTTRIGGERS ReportingTrigger = "ALL_RRM_EVENT_TRIGGERS"

	ReportingTriggerEVENTA2 ReportingTrigger = "EVENT_A2"

	ReportingTriggerEVENTA2PERIODIC ReportingTrigger = "EVENT_A2_PERIODIC"

	ReportingTriggerPERIODICAL ReportingTrigger = "PERIODICAL"
)

// Defines values for RestrictionType.
const (
	RestrictionTypeALLOWEDAREAS RestrictionType = "ALLOWED_AREAS"

	RestrictionTypeNOTALLOWEDAREAS RestrictionType = "NOT_ALLOWED_AREAS"
)

// Defines values for RoamingOdb.
const (
	RoamingOdbOUTSIDEHOMEPLMN RoamingOdb = "OUTSIDE_HOME_PLMN"

	RoamingOdbOUTSIDEHOMEPLMNCOUNTRY RoamingOdb = "OUTSIDE_HOME_PLMN_COUNTRY"
)

// Defines values for SatelliteBackhaulCategory.
const (
	SatelliteBackhaulCategoryGEO SatelliteBackhaulCategory = "GEO"

	SatelliteBackhaulCategoryLEO SatelliteBackhaulCategory = "LEO"

	SatelliteBackhaulCategoryMEO SatelliteBackhaulCategory = "MEO"

	SatelliteBackhaulCategoryNONSATELLITE SatelliteBackhaulCategory = "NON_SATELLITE"

	SatelliteBackhaulCategoryOTHERSAT SatelliteBackhaulCategory = "OTHER_SAT"
)

// Defines values for ScheduledCommunicationType.
const (
	ScheduledCommunicationTypeBIDIRECTIONAL ScheduledCommunicationType = "BIDIRECTIONAL"

	ScheduledCommunicationTypeDOWNLINKONLY ScheduledCommunicationType = "DOWNLINK_ONLY"

	ScheduledCommunicationTypeUPLINKONLY ScheduledCommunicationType = "UPLINK_ONLY"
)

// Defines values for SensorMeasurement.
const (
	SensorMeasurementBAROMETRICPRESSURE SensorMeasurement = "BAROMETRIC_PRESSURE"

	SensorMeasurementUEORIENTATION SensorMeasurement = "UE_ORIENTATION"

	SensorMeasurementUESPEED SensorMeasurement = "UE_SPEED"
)

// Defines values for SscMode.
const (
	SscModeSSCMODE1 SscMode = "SSC_MODE_1"

	SscModeSSCMODE2 SscMode = "SSC_MODE_2"

	SscModeSSCMODE3 SscMode = "SSC_MODE_3"
)

// Defines values for StationaryIndication.
const (
	StationaryIndicationMOBILE StationaryIndication = "MOBILE"

	StationaryIndicationSTATIONARY StationaryIndication = "STATIONARY"
)

// Defines values for TraceDepth.
const (
	TraceDepthMAXIMUM TraceDepth = "MAXIMUM"

	TraceDepthMAXIMUMWOVENDOREXTENSION TraceDepth = "MAXIMUM_WO_VENDOR_EXTENSION"

	TraceDepthMEDIUM TraceDepth = "MEDIUM"

	TraceDepthMEDIUMWOVENDOREXTENSION TraceDepth = "MEDIUM_WO_VENDOR_EXTENSION"

	TraceDepthMINIMUM TraceDepth = "MINIMUM"

	TraceDepthMINIMUMWOVENDOREXTENSION TraceDepth = "MINIMUM_WO_VENDOR_EXTENSION"
)

// Defines values for TrafficProfile.
const (
	TrafficProfileDUALTRANSDLFIRST TrafficProfile = "DUAL_TRANS_DL_FIRST"

	TrafficProfileDUALTRANSULFIRST TrafficProfile = "DUAL_TRANS_UL_FIRST"

	TrafficProfileMULTITRANS TrafficProfile = "MULTI_TRANS"

	TrafficProfileSINGLETRANSDL TrafficProfile = "SINGLE_TRANS_DL"

	TrafficProfileSINGLETRANSUL TrafficProfile = "SINGLE_TRANS_UL"
)

// Defines values for TransportProtocol.
const (
	TransportProtocolTCP TransportProtocol = "TCP"

	TransportProtocolUDP TransportProtocol = "UDP"
)

// Defines values for UeAuth.
const (
	UeAuthAUTHORIZED UeAuth = "AUTHORIZED"

	UeAuthNOTAUTHORIZED UeAuth = "NOT_AUTHORIZED"
)

// Defines values for UpConfidentiality.
const (
	UpConfidentialityNOTNEEDED UpConfidentiality = "NOT_NEEDED"

	UpConfidentialityPREFERRED UpConfidentiality = "PREFERRED"

	UpConfidentialityREQUIRED UpConfidentiality = "REQUIRED"
)

// Defines values for UpIntegrity.
const (
	UpIntegrityNOTNEEDED UpIntegrity = "NOT_NEEDED"

	UpIntegrityPREFERRED UpIntegrity = "PREFERRED"

	UpIntegrityREQUIRED UpIntegrity = "REQUIRED"
)

// Defines values for UriScheme.
const (
	UriSchemeHttp UriScheme = "http"

	UriSchemeHttps UriScheme = "https"
)

// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
type N5GMmCause Uinteger

// The 5GPRUK ID is string in NAI format as specified in clause 28.7.19 of 3GPP TS 23.003.
type N5GPrukId string

// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255.
type N5Qi int

// Unsigned integer indicating the 5QI Priority Level (see clauses 5.7.3.3 and 5.7.4 of 3GPP TS 23.501, within the range 1 to 127.Values are ordered in decreasing order of priority,  i.e. with 1 as the highest priority and 127 as the lowest priority.
type N5QiPriorityLevel int

// This data type is defined in the same way as the '5QiPriorityLevel' data type, but with the OpenAPI 'nullable: true' property.
type N5QiPriorityLevelRm int

// This data type is defined in the same way as the '5QiPriorityLevel' data type, but with the OpenAPI 'nullable: true' property. "
type N5QiRm int

// Indicates whether the access is  via 3GPP or via non-3GPP.
type AccessType string

// Indicates wether the access is via 3GPP or via non-3GPP but with the OpenAPI  'nullable: true' property."
type AccessTypeRm interface{}

// The ACS information for the 5G-RG is defined in BBF TR-069 [42] or in BBF TR-369
type AcsInfo struct {
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	AcsIpv4Addr *Ipv4Addr `json:"acsIpv4Addr,omitempty"`

	// String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
	AcsIpv6Addr *Ipv6Addr `json:"acsIpv6Addr,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	AcsUrl *Uri `json:"acsUrl,omitempty"`
}

// This data type is defined in the same way as the 'AcsInfo' data type, but with the  OpenAPI 'nullable: true' property.
type AcsInfoRm interface{}

// The enumeration AdditionalQosFlowInfo provides additional QoS flow information (see clause  9.3.1.12 3GPP TS 38.413 [11]). It shall comply with the provisions defined in table 5.5.3.12-1.
type AdditionalQosFlowInfo interface{}

// Contains the maximum aggregated uplink and downlink bit rates.
type Ambr struct {
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	Downlink BitRate `json:"downlink"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	Uplink BitRate `json:"uplink"`
}

// This data type is defined in the same way as the 'Ambr' data type, but with the OpenAPI 'nullable: true' property."
type AmbrRm interface{}

// String identifying the AMF ID composed of AMF Region ID (8 bits), AMF Set ID (10 bits) and AMF  Pointer (6 bits) as specified in clause 2.10.1 of 3GPP TS 23.003. It is encoded as a string of  6 hexadecimal characters (i.e., 24 bits).
type AmfId string

// Fully Qualified Domain Name
type AmfName Fqdn

// String identifying the AMF Set ID (10 bits) as specified in clause 2.10.1 of 3GPP TS 23.003.  It is encoded as a string of 3 hexadecimal characters where the first character is limited to  values 0 to 3 (i.e. 10 bits)
type AmfRegionId string

// String identifying the AMF Set ID (10 bits) as specified in clause 2.10.1 of 3GPP TS 23.003.  It is encoded as a string of 3 hexadecimal characters where the first character is limited to  values 0 to 3 (i.e. 10 bits).
type AmfSetId string

// Contains the APN rate control status e.g. of the AMF.
type ApnRateStatus struct {
	// When present, it shall indicate the number of additional exception reports the AF is allowed to send downlink in the  given time unit for the given APN (all PDN connections of the UE to this APN, see clause 4.7.7.3 in 3GPP TS 23.401.
	RemainExReportsDl *int `json:"remainExReportsDl,omitempty"`

	// When present, it shall indicate the number of additional exception reports the UE is allowed to send uplink in the given time unit for the given APN (all PDN connections of the UE to this APN, see clause 4.7.7.3 in 3GPP TS 23.401.
	RemainExReportsUl *int `json:"remainExReportsUl,omitempty"`

	// When present, it shall contain the number of packets the UE is allowed to send uplink in the given time unit for the given APN (all PDN connections of the UE to this APN see clause 4.7.7.3 in 3GPP TS 23.401.
	RemainPacketsDl *int `json:"remainPacketsDl,omitempty"`

	// When present, it shall contain the number of packets the UE is allowed to send uplink in the given time unit for the given APN (all PDN connections of the UE to this APN see clause 4.7.7.3 in 3GPP TS 23.401.
	RemainPacketsUl *int `json:"remainPacketsUl,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	ValidityTime *DateTime `json:"validityTime,omitempty"`
}

// Application provided charging identifier allowing correlation of charging information.
type ApplicationChargingId string

// String providing an application identifier.
type ApplicationId string

// String providing an application identifier with the OpenAPI 'nullable: true' property.
type ApplicationIdRm string

// Provides area information.
type Area interface{}

// Values are operator specific.
type AreaCode string

// This data type is defined in the same way as the 'AreaCode' data type, but with the OpenAPI 'nullable: true' property.
type AreaCodeRm string

// Contain the area based on Cells or Tracking Areas.
type AreaScope struct {
	EutraCellIdList *[]EutraCellId `json:"eutraCellIdList,omitempty"`
	NrCellIdList    *[]NrCellId    `json:"nrCellIdList,omitempty"`

	// A map (list of key-value pairs) where PlmnId converted to a string serves as key
	TacInfoPerPlmn *AreaScope_TacInfoPerPlmn `json:"tacInfoPerPlmn,omitempty"`
	TacList        *[]Tac                    `json:"tacList,omitempty"`
}

// A map (list of key-value pairs) where PlmnId converted to a string serves as key
type AreaScope_TacInfoPerPlmn struct {
	AdditionalProperties map[string]TacInfo `json:"-"`
}

// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer.
type AreaSessionId Uint16

// Integer value indicating the ARFCN applicable for a downlink, uplink or bi-directional (TDD) NR global frequency raster, as definition of "ARFCN-ValueNR" IE in clause 6.3.2 of 3GPP TS 38.331.
type ArfcnValueNR int

// Contains Allocation and Retention Priority information.
type Arp struct {
	// The enumeration PreemptionCapability indicates the pre-emption capability of a request on other QoS flows. See clause 5.7.2.2 of 3GPP TS 23.501. It shall comply with the provisions defined in table 5.5.3.1-1.
	PreemptCap PreemptionCapability `json:"preemptCap"`

	// The enumeration PreemptionVulnerability indicates the pre-emption vulnerability of the QoS flow to pre-emption from other QoS flows. See clause 5.7.2.2 of 3GPP TS 23.501. It shall comply with the provisions defined in table 5.5.3.2-1
	PreemptVuln PreemptionVulnerability `json:"preemptVuln"`

	// nullable true shall not be used for this attribute. Unsigned integer indicating the ARP Priority Level (see clause 5.7.2.2 of 3GPP TS 23.501, within the range 1 to 15.Values are ordered in decreasing order of priority, i.e. with 1 as the highest priority and 15 as the lowest priority.
	PriorityLevel *ArpPriorityLevel `json:"priorityLevel"`
}

// nullable true shall not be used for this attribute. Unsigned integer indicating the ARP Priority Level (see clause 5.7.2.2 of 3GPP TS 23.501, within the range 1 to 15.Values are ordered in decreasing order of priority, i.e. with 1 as the highest priority and 15 as the lowest priority.
type ArpPriorityLevel int

// This data type is defined in the same way as the 'ArpPriorityLevel' data type, but with the OpenAPI 'nullable: true' property.
type ArpPriorityLevelRm int

// This data type is defined in the same way as the 'Arp' data type, but with the OpenAPI 'nullable: true' property.
type ArpRm interface{}

// contains a search parameter and its positive or negative content.
type Atom struct {
	// contains the name of a defined query parameter.
	Attr string `json:"attr"`

	// indicates whether the negative condition applies for the query condition.
	Negative *bool       `json:"negative,omitempty"`
	Value    interface{} `json:"value"`
}

// Containes Capability to support procedures related to Access Traffic Steering, Switching, Splitting.
type AtsssCapability struct {
	// Indicates the ATSSS-LL capability to support procedures related to Access Traffic Steering, Switching, Splitting (see clauses 4.2.10, 5.32 of 3GPP TS 23.501). true: Supported false (default): Not Supported
	AtsssLL *bool `json:"atsssLL,omitempty"`

	// Indicates the MPTCP capability to support procedures related to Access Traffic Steering, Switching, Splitting (see clauses 4.2.10, 5.32 of 3GPP TS 23.501 true: Supported false (default): Not Supported
	Mptcp *bool `json:"mptcp,omitempty"`

	// This IE is only used by the UPF to indicate whether the UPF supports RTT measurement without PMF (see clauses 5.32.2, 6.3.3.3 of 3GPP TS 23.501 true: Supported false (default): Not Supported
	RttWithoutPmf *bool `json:"rttWithoutPmf,omitempty"`
}

// Possible values are:
// - "EAP_SUCCESS": The NSSAA status is EAP-Success.
// - "EAP_FAILURE": The NSSAA status is EAP-Failure.
// - "PENDING": The NSSAA status is Pending.
type AuthStatus string

// Unsigned integer indicating Averaging Window (see clause 5.7.3.6 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
type AverWindow int

// This data type is defined in the same way as the 'AverWindow' data type, but with the OpenAPI 'nullable: true' property.
type AverWindowRm int

// Provides details of the Backup AMF.
type BackupAmfInfo struct {
	// Fully Qualified Domain Name
	BackupAmf AmfName `json:"backupAmf"`

	// If present, this IE shall contain the list of GUAMI(s) (supported by the AMF) for which the backupAmf IE applies.
	GuamiList *[]Guami `json:"guamiList,omitempty"`
}

// Parameters "replaceableInd" and "rechargeableInd" are only included if the value of Parameter "batteryInd" is true.
type BatteryIndication struct {
	// This IE shall indicate whether the UE is battery powered or not. true: the UE is battery powered; false or absent: the UE is not battery powered
	BatteryInd *bool `json:"batteryInd,omitempty"`

	// This IE shall indicate whether the battery of the UE is rechargeable or not. true: the battery of UE is rechargeable; false or absent: the battery of the UE is not rechargeable.
	RechargeableInd *bool `json:"rechargeableInd,omitempty"`

	// This IE shall indicate whether the battery of the UE is replaceable or not. true: the battery of the UE is replaceable; false or absent: the battery of the UE is not replaceable.
	ReplaceableInd *bool `json:"replaceableInd,omitempty"`
}

// This data type is defined in the same way as the 'BatteryIndication' data type, but with the OpenAPI 'nullable: true' property.
type BatteryIndicationRm interface{}

// string with format 'binary' as defined in OpenAPI.
type Binary string

// string with format 'binary' as defined in OpenAPI OpenAPI with 'nullable: true' property.
type BinaryRm string

// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
type BitRate string

// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.
type BitRateRm string

// Broadcast MBS Session's Delivery Status
type BroadcastDeliveryStatus string

// string with format 'bytes' as defined in OpenAPI
type Bytes []byte

// string with format 'bytes' as defined in OpenAPI OpenAPI with 'nullable: true' property.
type BytesRm []byte

// String representing the C-MSISDN as defined in clause 18.7 of 3GPP TS 23.003.
type CMsisdn string

// String representing the C-MSISDN as defined in clause 18.7 of 3GPP TS 23.003 with the OpenAPI 'nullable: true' property.
type CMsisdnRm string

// String containing a Closed Access Group Identifier.
type CagId string

// Contains a Cell Global Identification as defined in 3GPP TS 23.003, clause 4.3.1.
type CellGlobalId struct {
	CellId string `json:"cellId"`
	Lac    string `json:"lac"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`
}

// It contains data which need to be changed.
type ChangeItem struct {
	// indicates the path of the source JSON element (according to JSON Pointer syntax)  being moved or copied to the location indicated by the "path" attribute. It shall  be present if the "op" attribute is of value "MOVE".
	From     *string      `json:"from,omitempty"`
	NewValue *interface{} `json:"newValue,omitempty"`

	// Indicates the type of change to be performed.
	Op        ChangeType   `json:"op"`
	OrigValue *interface{} `json:"origValue,omitempty"`

	// contains a JSON pointer value (as defined in IETF RFC 6901) that references a target  location within the resource on which the change has been applied.
	Path string `json:"path"`
}

// Indicates the type of change to be performed.
type ChangeType string

// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
type ChargingId int

// A conjunctive normal form
type Cnf struct {
	CnfUnits []CnfUnit `json:"cnfUnits"`
}

// During the processing of cnfUnits attribute, all the members in the array shall be  interpreted as logically concatenated with logical "AND".
type CnfUnit struct {
	CnfUnit []Atom `json:"cnfUnit"`
}

// The enumeration CollectionPeriodRmmLteMdt defines Collection period for RRM measurements LTE for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.15-1.
type CollectionPeriodRmmLteMdt string

// The enumeration CollectionPeriodRmmNrMdt defines Collection period for RRM measurements NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.19-1
type CollectionPeriodRmmNrMdt string

// The ComplexQuery data type is either a conjunctive normal form or a disjunctive normal form.  The attribute names "cnfUnits" and "dnfUnits" (see clause 5.2.4.11 and clause 5.2.4.12)  serve as discriminator.
type ComplexQuery interface{}

// It contains the Core Network type 5GC or EPC.
type CoreNetworkType string

// It contains the Core Network type 5GC or EPC but with the OpenAPI 'nullable: true' property.
type CoreNetworkTypeRm interface{}

// string with format 'date' as defined in OpenAPI.
type Date openapi_types.Date

// string with format 'date' as defined in OpenAPI OpenAPI with 'nullable: true' property.
type DateRm openapi_types.Date

// string with format 'date-time' as defined in OpenAPI.
type DateTime time.Time

// string with format 'date-time' as defined in OpenAPI with 'nullable:true' property.
type DateTimeRm time.Time

// integer between and including 1 and 7 denoting a weekday. 1 shall indicate Monday, and the subsequent weekdays  shall be indicated with the next higher numbers. 7 shall indicate Sunday.
type DayOfWeek int

// Contains a Traffic Descriptor.
type DddTrafficDescriptor struct {
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	Ipv4Addr *Ipv4Addr `json:"ipv4Addr,omitempty"`

	// String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
	Ipv6Addr *Ipv6Addr `json:"ipv6Addr,omitempty"`

	// String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042.
	MacAddr *MacAddr48 `json:"macAddr,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	PortNumber *Uinteger `json:"portNumber,omitempty"`
}

// Fully Qualified Domain Name
type DiameterIdentity Fqdn

// Fully Qualified Domain Name, but it also allows the null value
type DiameterIdentityRm FqdnRm

// Possible values are:
//   - BUFFERED: The first downlink data is buffered with extended buffering matching the
//     source of the downlink traffic.
//   - TRANSMITTED: The first downlink data matching the source of the downlink traffic is
//     transmitted after previous buffering or discarding of corresponding packet(s) because
//     the UE of the PDU Session becomes ACTIVE, and buffered data can be delivered to UE.
//   - DISCARDED: The first downlink data matching the source of the downlink traffic is
//     discarded because the Extended Buffering time, as determined by the SMF, expires or
//     the amount of downlink data to be buffered is exceeded.
type DlDataDeliveryStatus string

// This data type is defined in the same way as the ' DlDataDeliveryStatus ' data type, but with the OpenAPI 'nullable: true' property.
type DlDataDeliveryStatusRm interface{}

// DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
type Dnai string

// Possible values are:
//   - EARLY: Early notification of UP path reconfiguration.
//   - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall
//     only be present in the subscription to the DNAI change event.
//   - LATE: Late notification of UP path reconfiguration.
type DnaiChangeType string

// It can take the values  as specified for DnaiChangeType but with the OpenAPI 'nullable: true' property.
type DnaiChangeTypeRm interface{}

// This data type is defined in the same way as the 'Dnai' data type, but with the OpenAPI 'nullable: true' property.
type DnaiRm string

// A disjunctive normal form.
type Dnf struct {
	DnfUnits []DnfUnit `json:"dnfUnits"`
}

// During the processing of dnfUnits attribute, all the members in the array shall be  interpreted as logically concatenated with logical "OR".
type DnfUnit struct {
	DnfUnit []Atom `json:"dnfUnit"`
}

// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
type Dnn string

// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the  Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1  and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. 'Label1.Label2.Label3') with the OpenAPI 'nullable: true' property.
type DnnRm string

// string with format 'double' as defined in OpenAPI
type Double float64

// string with format 'double' as defined in OpenAPI with 'nullable: true' property.
type DoubleRm float64

// indicating a time in seconds.
type DurationSec int

// indicating a time in seconds with OpenAPI defined 'nullable: true' property.
type DurationSecRm int

// It indicates the QoS Characteristics for a Non-standardised or not pre-configured 5QI for downlink and uplink.
type Dynamic5Qi struct {
	// Unsigned integer indicating Averaging Window (see clause 5.7.3.6 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
	AverWindow *AverWindow `json:"averWindow,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501 [8])), expressed in 0.01 milliseconds.
	CnPacketDelayBudgetDl *ExtPacketDelBudget `json:"cnPacketDelayBudgetDl,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501 [8])), expressed in 0.01 milliseconds.
	CnPacketDelayBudgetUl *ExtPacketDelBudget `json:"cnPacketDelayBudgetUl,omitempty"`

	// Unsigned integer indicating Maximum Data Burst Volume (see clauses 5.7.3.7 and 5.7.4 of 3GPP TS 23.501), expressed in Bytes.
	ExtMaxDataBurstVol *ExtMaxDataBurstVol `json:"extMaxDataBurstVol,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501 [8])), expressed in 0.01 milliseconds.
	ExtPacketDelBudget *ExtPacketDelBudget `json:"extPacketDelBudget,omitempty"`

	// Unsigned integer indicating Maximum Data Burst Volume (see clauses 5.7.3.7 and 5.7.4 of 3GPP TS 23.501), expressed in Bytes.
	MaxDataBurstVol *MaxDataBurstVol `json:"maxDataBurstVol,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
	PacketDelayBudget PacketDelBudget `json:"packetDelayBudget"`

	// String representing Packet Error Rate (see clause 5.7.3.5 and 5.7.4 of 3GPP TS 23.501, expressed as a "scalar x 10-k" where the scalar and the exponent k are each encoded as one decimal digit.
	PacketErrRate PacketErrRate `json:"packetErrRate"`

	// Unsigned integer indicating the 5QI Priority Level (see clauses 5.7.3.3 and 5.7.4 of 3GPP TS 23.501, within the range 1 to 127.Values are ordered in decreasing order of priority,  i.e. with 1 as the highest priority and 127 as the lowest priority.
	PriorityLevel N5QiPriorityLevel `json:"priorityLevel"`

	// The enumeration QosResourceType indicates whether a QoS Flow is non-GBR, delay critical GBR, or non-delay critical GBR (see clauses 5.7.3.4 and 5.7.3.5 of 3GPP TS 23.501). It shall comply with the provisions defined in table 5.5.3.6-1.
	ResourceType QosResourceType `json:"resourceType"`
}

// This represents the identifier of the eNB ID as specified in clause 9.2.1.37 of  3GPP TS 36.413. The string shall be formatted with the following pattern  '^('MacroeNB-[A-Fa-f0-9]{5}|LMacroeNB-[A-Fa-f0-9]{6}|SMacroeNB-[A-Fa-f0-9]{5} |HomeeNB-[A-Fa-f0-9]{7})$'. The value of the eNB ID shall be encoded in hexadecimal representation. Each character in the  string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits.  The padding 0 shall be added to make multiple nibbles, so the most significant character  representing the padding 0 if required together with the 4 most significant bits of the eNB ID  shall appear first in the string, and the character representing the 4 least significant bit  of the eNB ID (to form a nibble) shall appear last in the string.
type ENbId string

// Contains EAS IP replacement information for a Source and a Target EAS.
type EasIpReplacementInfo struct {
	// Represents the IP address and port of an EAS server.
	Source EasServerAddress `json:"source"`

	// Represents the IP address and port of an EAS server.
	Target EasServerAddress `json:"target"`
}

// Represents the IP address and port of an EAS server.
type EasServerAddress struct {
	// Contains an IP adresse.
	Ip IpAddr `json:"ip"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Port Uinteger `json:"port"`
}

// Contains the ECGI (E-UTRAN Cell Global Identity), as described in 3GPP 23.003
type Ecgi struct {
	// 28-bit string identifying an E-UTRA Cell Id as specified in clause 9.3.1.9 of  3GPP TS 38.413, in hexadecimal representation. Each character in the string shall take a  value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most  significant character representing the 4 most significant bits of the Cell Id shall appear  first in the string, and the character representing the 4 least significant bit of the  Cell Id shall appear last in the string.
	EutraCellId EutraCellId `json:"eutraCellId"`

	// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).
	Nid *Nid `json:"nid,omitempty"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`
}

// This data type is defined in the same way as the 'Ecgi' data type, but with the OpenAPI 'nullable: true' property.
type EcgiRm interface{}

// Contains the Edge Configuration Server Address Configuration Information as defined in clause 5.2.3.6.1 of 3GPP TS 23.502.
type EcsServerAddr struct {
	EcsFqdnList      *[]Fqdn   `json:"ecsFqdnList,omitempty"`
	EcsIpAddressList *[]IpAddr `json:"ecsIpAddressList,omitempty"`
	EcsProviderId    *string   `json:"ecsProviderId,omitempty"`
	EcsUriList       *[]Uri    `json:"ecsUriList,omitempty"`
}

// This data type is defined in the same way as the ' EcsServerAddr ' data type, but with the OpenAPI 'nullable: true' property.
type EcsServerAddrRm interface{}

// Empty JSON object { }, it is defined with the keyword additionalProperties false
type EmptyObject map[string]interface{}

// 28-bit string identifying an E-UTRA Cell Id as specified in clause 9.3.1.9 of  3GPP TS 38.413, in hexadecimal representation. Each character in the string shall take a  value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most  significant character representing the 4 most significant bits of the Cell Id shall appear  first in the string, and the character representing the 4 least significant bit of the  Cell Id shall appear last in the string.
type EutraCellId string

// This data type is defined in the same way as the 'EutraCellId' data type, but with the OpenAPI 'nullable: true' property.
type EutraCellIdRm string

// Contains the E-UTRA user location.
type EutraLocation struct {
	// The value represents the elapsed time in minutes since the last network contact of the mobile station.  Value "0" indicates that the location information was obtained after a successful paging procedure for Active Location Retrieval when the UE is in idle mode or after a successful NG-RAN location reporting procedure with the eNB when the UE is in connected mode.  Any other value than "0" indicates that the location information is the last known one.  See 3GPP TS 29.002 clause 17.7.8.
	AgeOfLocationInformation *int `json:"ageOfLocationInformation,omitempty"`

	// Contains the ECGI (E-UTRAN Cell Global Identity), as described in 3GPP 23.003
	Ecgi Ecgi `json:"ecgi"`

	// Refers to Calling Geodetic Location. See ITU-T Recommendation Q.763 (1999) [24] clause 3.88.2. Only the description of an ellipsoid point with uncertainty circle is allowed to be used.
	GeodeticInformation *string `json:"geodeticInformation,omitempty"`

	// Refer to geographical Information. See 3GPP TS 23.032 clause 7.3.2. Only the description of an ellipsoid point with uncertainty circle is allowed to be used.
	GeographicalInformation *string `json:"geographicalInformation,omitempty"`

	// One of the six attributes n3IwfId, gNbIdm, ngeNbId, wagfId, tngfId, eNbId shall be present.
	GlobalENbId *GlobalRanNodeId `json:"globalENbId,omitempty"`

	// One of the six attributes n3IwfId, gNbIdm, ngeNbId, wagfId, tngfId, eNbId shall be present.
	GlobalNgenbId *GlobalRanNodeId `json:"globalNgenbId,omitempty"`

	// This flag when present shall indicate that the Ecgi shall be ignored When present, it shall be set as follows: - true: ecgi shall be ignored. - false (default): ecgi shall not be ignored.
	IgnoreEcgi *bool `json:"ignoreEcgi,omitempty"`
	IgnoreTai  *bool `json:"ignoreTai,omitempty"`

	// Contains the tracking area identity as described in 3GPP 23.003
	Tai Tai `json:"tai"`

	// string with format 'date-time' as defined in OpenAPI.
	UeLocationTimestamp *DateTime `json:"ueLocationTimestamp,omitempty"`
}

// This data type is defined in the same way as the 'EutraLocation' data type, but with the OpenAPI 'nullable: true' property.
type EutraLocationRm interface{}

// The enumeration EventForMdt defines events triggered measurement for logged MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.11-1
type EventForMdt string

// Unsigned integer indicating Maximum Data Burst Volume (see clauses 5.7.3.7 and 5.7.4 of 3GPP TS 23.501), expressed in Bytes.
type ExtMaxDataBurstVol int

// This data type is defined in the same way as the 'ExtMaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property.
type ExtMaxDataBurstVolRm int

// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501 [8])), expressed in 0.01 milliseconds.
type ExtPacketDelBudget int

// This data type is defined in the same way as the 'ExtPacketDelBudget' data type, but with the OpenAPI 'nullable: true' property. "
type ExtPacketDelBudgetRm int

// ExtSnssai defines model for ExtSnssai.
type ExtSnssai struct {
	// Embedded struct due to allOf(#/components/schemas/Snssai)
	Snssai `yaml:",inline"`
	// Embedded struct due to allOf(#/components/schemas/SnssaiExtension)
	SnssaiExtension `yaml:",inline"`
}

// String identifying External Group Identifier that identifies a group made up of one or more  subscriptions associated to a group of IMSIs, as specified in clause 19.7.3 of 3GPP TS 23.003.
type ExternalGroupId string

// String identifying External Group Identifier that identifies a group made up of one or more  subscriptions associated to a group of IMSIs, as specified in clause 19.7.3 of  3GPP TS 23.003  with the OpenAPI 'nullable: true' property.
type ExternalGroupIdRm string

// List of geographic area or list of civic address info for MBS Service Area
type ExternalMbsServiceArea interface{}

// string with format 'float' as defined in OpenAPI.
type Float float32

// string with format 'float' as defined in OpenAPI with the OpenAPI defined 'nullable: true' property.
type FloatRm float32

// Fully Qualified Domain Name
type Fqdn string

// a matching rule for a FQDN pattern
type FqdnPatternMatchingRule interface{}

// Fully Qualified Domain Name, but it also allows the null value
type FqdnRm interface{}

// Provides the G-NB identifier.
type GNbId struct {
	// Unsigned integer representing the bit length of the gNB ID as defined in clause 9.3.1.6 of 3GPP TS 38.413 [11], within the range 22 to 32.
	BitLength int `json:"bitLength"`

	// This represents the identifier of the gNB. The value of the gNB ID shall be encoded in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The padding 0 shall be added to make multiple nibbles,  the most significant character representing the padding 0 if required together with the 4 most significant bits of the gNB ID shall appear first in the string, and the character representing the 4 least significant bit of the gNB ID shall appear last in the string.
	GNBValue string `json:"gNBValue"`
}

// Global Cable Identifier uniquely identifying the connection between the 5G-CRG or FN-CRG to the 5GS. See clause 28.15.4 of 3GPP TS 23.003. This shall be encoded as a string per clause 28.15.4 of 3GPP TS 23.003, and compliant with the syntax specified  in clause 2.2  of IETF RFC 7542 for the username part of a NAI. The GCI value is specified in CableLabs WR-TR-5WWC-ARCH.
type Gci string

// List of geographic area or list of civic address info
type GeoServiceArea struct {
	CivicAddressList   *[]externalRef0.CivicAddress   `json:"civicAddressList,omitempty"`
	GeographicAreaList *[]externalRef0.GeographicArea `json:"geographicAreaList,omitempty"`
}

// Exactly one of cgi, sai or lai shall be present.
type GeraLocation interface{}

// string with format 'bytes' as defined in OpenAPI
type Gli Bytes

// One of the six attributes n3IwfId, gNbIdm, ngeNbId, wagfId, tngfId, eNbId shall be present.
type GlobalRanNodeId interface{}

// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= "extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.
type Gpsi string

// String identifying a Gpsi shall contain either an External Id or an MSISDN. It shall be  formatted as follows -External Identifier= 'extid-'extid', where 'extid' shall be formatted  according to clause 19.7.2 of 3GPP TS 23.003 that describes an External Identifier with the  OpenAPI 'nullable: true' property.
type GpsiRm string

// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003.
type GroupId string

// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003 with the OpenAPI 'nullable: true' property.
type GroupIdRm string

// Globally Unique AMF Identifier constructed out of PLMN, Network and AMF identity.
type Guami struct {
	// String identifying the AMF ID composed of AMF Region ID (8 bits), AMF Set ID (10 bits) and AMF  Pointer (6 bits) as specified in clause 2.10.1 of 3GPP TS 23.003. It is encoded as a string of  6 hexadecimal characters (i.e., 24 bits).
	AmfId AmfId `json:"amfId"`

	// Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN.
	PlmnId PlmnIdNid `json:"plmnId"`
}

// This data type is defined in the same way as the 'Guami' data type, but with the OpenAPI 'nullable: true' property.
type GuamiRm interface{}

// Hypertext Application Language (HAL) template contains the extended 3GPP hypermedia format.
type HalTemplate struct {
	// The media type that should be used for the corresponding request. If the attribute is missing, or contains an unrecognized value, the client should act as if the  contentType is set to "application/json".
	ContentType *string `json:"contentType,omitempty"`

	// HTTP methodes.
	Method HttpMethod `json:"method"`

	// The properties that should be included in the body of the corresponding request.  If the contentType attribute is set to "application/json", then this attribute  describes the attributes of the JSON object of the body.
	Properties *[]Property `json:"properties,omitempty"`

	// A human-readable string that can be used to identify this template
	Title *string `json:"title,omitempty"`
}

// This IE represents the identifier of the HFC node Id as specified in CableLabs WR-TR-5WWC-ARCH. It is provisioned by the wireline operator as part of wireline operations and may contain up to six characters.
type HfcNId string

// This data type is defined in the same way as the 'HfcNId' data type, but with the OpenAPI 'nullable: true' property.
type HfcNIdRm string

// REpresents the HFC Node Identifer received over NGAP.
type HfcNodeId struct {
	// This IE represents the identifier of the HFC node Id as specified in CableLabs WR-TR-5WWC-ARCH. It is provisioned by the wireline operator as part of wireline operations and may contain up to six characters.
	HfcNId HfcNId `json:"hfcNId"`
}

// This data type is defined in the same way as the 'HfcNodeId' data type, but with the OpenAPI 'nullable: true' property.
type HfcNodeIdRm interface{}

// HTTP methodes.
type HttpMethod string

// Ingress Tunnel Address Information
type IngressTunAddrInfo struct {
	IngressTunAddr []TunnelAddress `json:"ingressTunAddr"`
}

// string with format 'int32' as defined in OpenAPI.
type Int32 int32

// string with format 'int32' as defined in OpenAPI with the OpenAPI defined 'nullable: true' property.
type Int32Rm int32

// string with format 'int64' as defined in OpenAPI.
type Int64 int64

// string with format 'int64' as defined in OpenAPI with the OpenAPI defined 'nullable: true' property.
type Int64Rm int64

// Indicates the Inter Frequency Target information.
type InterFreqTargetInfo struct {
	// When present, this IE shall contain a list of the physical cell identities where the UE is requested to perform measurement logging for the indicated frequency.
	CellIdList *[]PhysCellId `json:"cellIdList,omitempty"`

	// Integer value indicating the ARFCN applicable for a downlink, uplink or bi-directional (TDD) NR global frequency raster, as definition of "ARFCN-ValueNR" IE in clause 6.3.2 of 3GPP TS 38.331.
	DlCarrierFreq ArfcnValueNR `json:"dlCarrierFreq"`
}

// It contains an invalid parameter and a related description.
type InvalidParam struct {
	// If the invalid parameter is an attribute in a JSON body, this IE shall contain the  attribute's name and shall be encoded as a JSON Pointer. If the invalid parameter is  an HTTP header, this IE shall be formatted as the concatenation of the string "header "  plus the name of such header. If the invalid parameter is a query parameter, this IE  shall be formatted as the concatenation of the string "query " plus the name of such  query parameter. If the invalid parameter is a variable part in the path of a resource  URI, this IE shall contain the name of the variable, including the symbols "{" and "}"  used in OpenAPI specification as the notation to represent variable path segments.
	Param string `json:"param"`

	// A human-readable reason, e.g. "must be a positive integer". In cases involving failed  operations in a PATCH request, the reason string should identify the operation that  failed using the operation's array index to assist in correlation of the invalid  parameter with the failed operation, e.g." Replacement value invalid for attribute  (failed operation index= 4)"
	Reason *string `json:"reason,omitempty"`
}

// Contains an IP adresse.
type IpAddr interface{}

// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
type Ipv4Addr string

// "String identifying a IPv4 address mask formatted in the 'dotted decimal' notation as defined in RFC 1166."
type Ipv4AddrMask string

// String identifying a IPv4 address mask formatted in the 'dotted decimal' notation as defined in RFC 1166 with the OpenAPI defined 'nullable: true' property.
type Ipv4AddrMaskRm string

// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166 with the OpenAPI defined 'nullable: true' property.
type Ipv4AddrRm string

// Ipv6Addr defines model for Ipv6Addr.
type Ipv6Addr struct {
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
}

// Ipv6AddrRm defines model for Ipv6AddrRm.
type Ipv6AddrRm struct {
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
}

// Ipv6Prefix defines model for Ipv6Prefix.
type Ipv6Prefix struct {
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
}

// Ipv6PrefixRm defines model for Ipv6PrefixRm.
type Ipv6PrefixRm struct {
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
}

// The enumeration JobType defines Job Type in the trace. See 3GPP TS 32.422 for further  description of the values. It shall comply with the provisions defined in table 5.6.3.3-1.
type JobType string

// Possible values are:
//   - "LOCATION_ALLOWED_WITH_NOTIFICATION": Location allowed with notification
//   - "LOCATION_ALLOWED_WITHOUT_NOTIFICATION": Location allowed without notification
//   - "LOCATION_ALLOWED_WITHOUT_RESPONSE": Location with notification and privacy
//     verification; location allowed if no response
//   - "LOCATION_RESTRICTED_WITHOUT_RESPONSE": Location with notification and privacy
//     verification; location restricted if no response
//   - "NOTIFICATION_ONLY": Notification only
//   - "NOTIFICATION_AND_VERIFICATION_ONLY": Notification and privacy verification only
type LcsServiceAuth string

// Possible values are:
// - DSL: Identifies a DSL line
// - PON: Identifies a PON line
type LineType string

// This data type is defined in the same way as the 'LineType' data type, but with the OpenAPI 'nullable: true' property.
type LineTypeRm interface{}

// It contains the URI of the linked resource.
type Link struct {
	// String providing an URI formatted according to RFC 3986.
	Href *Uri `json:"href,omitempty"`
}

// It contains the URI of the linked resource with the OpenAPI 'nullable: true' property.
type LinkRm struct {
	// String providing an URI formatted according to RFC 3986.
	Href *Uri `json:"href,omitempty"`
}

// A list of mutually exclusive alternatives of 1 or more links.
type LinksValueSchema interface{}

// Contains a Location area identification as defined in 3GPP TS 23.003, clause 4.1.
type LocationAreaId struct {
	// Location Area Code.
	Lac string `json:"lac"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`
}

// The enumeration LoggingIntervalMdt defines Logging Interval for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.12-1.
type LoggingDurationMdt string

// The enumeration LoggingDurationMdt defines Logging Duration in NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.20-1.
type LoggingDurationNrMdt string

// The enumeration LoggingIntervalMdt defines Logging Interval for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.12-1.
type LoggingIntervalMdt string

// The enumeration LoggingIntervalNrMdt defines Logging Interval in NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.18-1.
type LoggingIntervalNrMdt string

// Contains LTE V2X services authorized information.
type LteV2xAuth struct {
	// Possible values are:
	// - AUTHORIZED: Indicates that the UE is authorized.
	// - NOT_AUTHORIZED: Indicates that the UE is not authorized.
	PedestrianUeAuth *UeAuth `json:"pedestrianUeAuth,omitempty"`

	// Possible values are:
	// - AUTHORIZED: Indicates that the UE is authorized.
	// - NOT_AUTHORIZED: Indicates that the UE is not authorized.
	VehicleUeAuth *UeAuth `json:"vehicleUeAuth,omitempty"`
}

// String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042.
type MacAddr48 string

// "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042 with the OpenAPI 'nullable: true' property."
type MacAddr48Rm string

// string with format 'bytes' as defined in OpenAPI
type ManAssiUeRadioCapId Bytes

// the matching operation.
type MatchingOperator string

// Unsigned integer indicating Maximum Data Burst Volume (see clauses 5.7.3.7 and 5.7.4 of 3GPP TS 23.501), expressed in Bytes.
type MaxDataBurstVol int

// This data type is defined in the same way as the 'MaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property.
type MaxDataBurstVolRm int

// MBS Frequency Selection Area Identifier
type MbsFsaId string

// MBS Security Key Data Structure
type MbsKeyInfo struct {
	// string with format 'bytes' as defined in OpenAPI
	KeyDomainId Bytes `json:"keyDomainId"`

	// string with format 'bytes' as defined in OpenAPI
	Msk *Bytes `json:"msk,omitempty"`

	// string with format 'bytes' as defined in OpenAPI
	MskId Bytes `json:"mskId"`

	// string with format 'date-time' as defined in OpenAPI.
	MskLifetime *DateTime `json:"mskLifetime,omitempty"`

	// string with format 'bytes' as defined in OpenAPI
	Mtk *Bytes `json:"mtk,omitempty"`

	// string with format 'bytes' as defined in OpenAPI
	MtkId *Bytes `json:"mtkId,omitempty"`
}

// Represents an MBS Media Component.
type MbsMediaComp struct {
	MbsFlowDescs  *[]externalRef0.FlowDescription `json:"mbsFlowDescs,omitempty"`
	MbsMedCompNum int                             `json:"mbsMedCompNum"`

	// Represent MBS Media Information.
	MbsMediaInfo *MbsMediaInfo `json:"mbsMediaInfo,omitempty"`

	// Represent MBS QoS requirements.
	MbsQoSReq *MbsQoSReq `json:"mbsQoSReq,omitempty"`

	// Indicates the reservation priority.
	MbsSdfResPrio *externalRef0.ReservPriority `json:"mbsSdfResPrio,omitempty"`
	QosRef        *string                      `json:"qosRef,omitempty"`
}

// This data type is defined in the same way as the MbsMediaComp data type, but with the OpenAPI nullable property set to true.
type MbsMediaCompRm interface{}

// Represent MBS Media Information.
type MbsMediaInfo struct {
	Codecs *[]externalRef0.CodecData `json:"codecs,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	MaxReqMbsBwDl *BitRate `json:"maxReqMbsBwDl,omitempty"`

	// Indicates the media type of a media component.
	MbsMedType *externalRef0.MediaType `json:"mbsMedType,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	MinReqMbsBwDl *BitRate `json:"minReqMbsBwDl,omitempty"`
}

// Represent MBS QoS requirements.
type MbsQoSReq struct {
	// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255.
	N5qi N5Qi `json:"5qi"`

	// Unsigned integer indicating Averaging Window (see clause 5.7.3.6 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
	AverWindow *AverWindow `json:"averWindow,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	GuarBitRate *BitRate `json:"guarBitRate,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	MaxBitRate *BitRate `json:"maxBitRate,omitempty"`

	// Contains Allocation and Retention Priority information.
	ReqMbsArp *Arp `json:"reqMbsArp,omitempty"`
}

// MbsSecurityContext defines model for MbsSecurityContext.
type MbsSecurityContext struct {
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbsSecurityContext
	KeyList MbsSecurityContext_KeyList `json:"keyList"`
}

// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbsSecurityContext
type MbsSecurityContext_KeyList struct {
	AdditionalProperties map[string]MbsKeyInfo `json:"-"`
}

// MBS Service Area
type MbsServiceArea struct {
	// List of NR cell Ids
	NcgiList *[]NcgiTai `json:"ncgiList,omitempty"`

	// List of tracking area Ids
	TaiList *[]Tai `json:"taiList,omitempty"`
}

// MBS Service Area Information for location dependent MBS session
type MbsServiceAreaInfo struct {
	// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer.
	AreaSessionId AreaSessionId `json:"areaSessionId"`

	// MBS Service Area
	MbsServiceArea MbsServiceArea `json:"mbsServiceArea"`
}

// Represent MBS Service Information.
type MbsServiceInfo struct {
	// Contains an AF application identifier.
	AfAppId       *externalRef0.AfAppId        `json:"afAppId,omitempty"`
	MbsMediaComps MbsServiceInfo_MbsMediaComps `json:"mbsMediaComps"`

	// Indicates the reservation priority.
	MbsSdfResPrio *externalRef0.ReservPriority `json:"mbsSdfResPrio,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	MbsSessionAmbr *BitRate `json:"mbsSessionAmbr,omitempty"`
}

// MbsServiceInfo_MbsMediaComps defines model for MbsServiceInfo.MbsMediaComps.
type MbsServiceInfo_MbsMediaComps struct {
	AdditionalProperties map[string]MbsMediaCompRm `json:"-"`
}

// Indicates the type of an MBS session
type MbsServiceType string

// Individual MBS session
type MbsSession interface{}

// Indicates the MBS session's activity status
type MbsSessionActivityStatus string

// MBS session event
type MbsSessionEvent struct {
	// MBS Session Event Type
	EventType MbsSessionEventType `json:"eventType"`
}

// MBS session event report
type MbsSessionEventReport struct {
	// Broadcast MBS Session's Delivery Status
	BroadcastDelStatus *BroadcastDeliveryStatus `json:"broadcastDelStatus,omitempty"`

	// MBS Session Event Type
	EventType MbsSessionEventType `json:"eventType"`

	// Ingress Tunnel Address Information
	IngressTunAddrInfo *IngressTunAddrInfo `json:"ingressTunAddrInfo,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	TimeStamp *DateTime `json:"timeStamp,omitempty"`
}

// MBS session event report list
type MbsSessionEventReportList struct {
	EventReportList     []MbsSessionEventReport `json:"eventReportList"`
	NotifyCorrelationId *string                 `json:"notifyCorrelationId,omitempty"`
}

// MBS Session Event Type
type MbsSessionEventType string

// MBS Session Identifier
type MbsSessionId struct {
	// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).
	Nid *Nid `json:"nid,omitempty"`

	// Source specific IP multicast address
	Ssm *Ssm `json:"ssm,omitempty"`

	// Temporary Mobile Group Identity
	Tmgi *Tmgi `json:"tmgi,omitempty"`
}

// MBS session subscription
type MbsSessionSubscription struct {
	// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer.
	AreaSessionId *AreaSessionId    `json:"areaSessionId,omitempty"`
	EventList     []MbsSessionEvent `json:"eventList"`

	// string with format 'date-time' as defined in OpenAPI.
	ExpiryTime *DateTime `json:"expiryTime,omitempty"`

	// MBS Session Identifier
	MbsSessionId *MbsSessionId `json:"mbsSessionId,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	MbsSessionSubscUri *Uri `json:"mbsSessionSubscUri,omitempty"`

	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	NfcInstanceId       *NfInstanceId `json:"nfcInstanceId,omitempty"`
	NotifyCorrelationId *string       `json:"notifyCorrelationId,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	NotifyUri Uri `json:"notifyUri"`
}

// Contains an MBSFN area information.
type MbsfnArea struct {
	// When present, this IE shall contain the Carrier Frequency (EARFCN).
	CarrierFrequency *int `json:"carrierFrequency,omitempty"`

	// This IE shall contain the MBSFN Area ID.
	MbsfnAreaId *int `json:"mbsfnAreaId,omitempty"`
}

// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
type Mcc string

// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of  3GPP TS 38.413 with the OpenAPI 'nullable: true' property.
type MccRm string

// contains contain MDT configuration data.
type MdtConfiguration struct {
	AddPositioningMethodList *[]PositioningMethodMdt `json:"addPositioningMethodList,omitempty"`

	// Contain the area based on Cells or Tracking Areas.
	AreaScope *AreaScope `json:"areaScope,omitempty"`

	// The enumeration CollectionPeriodRmmLteMdt defines Collection period for RRM measurements LTE for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.15-1.
	CollectionPeriodRmmLte *CollectionPeriodRmmLteMdt `json:"collectionPeriodRmmLte,omitempty"`

	// The enumeration CollectionPeriodRmmNrMdt defines Collection period for RRM measurements NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.19-1
	CollectionPeriodRmmNr *CollectionPeriodRmmNrMdt `json:"collectionPeriodRmmNr,omitempty"`
	EventList             *[]EventForMdt            `json:"eventList,omitempty"`

	// This IE shall be present if the report trigger parameter is configured for A2 event reporting or A2 event triggered periodic reporting and the job type parameter is configured for Immediate MDT or combined Immediate MDT and Trace in LTE. When present, this IE shall indicate the Event Threshold for RSRP, and the value shall be between 0-97.
	EventThresholdRsrp *int `json:"eventThresholdRsrp,omitempty"`

	// This IE shall be present if the report trigger parameter is configured for A2 event reporting or A2 event triggered periodic reporting and the job type parameter is configured for Immediate MDT or combined Immediate MDT and Trace in NR. When present, this IE shall indicate the Event Threshold for RSRP, and the value shall be between 0-127.
	EventThresholdRsrpNr *int `json:"eventThresholdRsrpNr,omitempty"`

	// This IE shall be present if the report trigger parameter is configured for A2 event reporting or A2 event triggered periodic reporting and the job type parameter is configured for Immediate MDT or combined Immediate MDT and Trace in LTE.When present, this IE shall indicate the Event Threshold for RSRQ, and the value shall be between 0-34.
	EventThresholdRsrq *int `json:"eventThresholdRsrq,omitempty"`

	// This IE shall be present if the report trigger parameter is configured for A2 event reporting or A2 event triggered periodic reporting and the job type parameter is configured for Immediate MDT or combined Immediate MDT and Trace in NR.When present, this IE shall indicate the Event Threshold for RSRQ, and the value shall be between 0-127.
	EventThresholdRsrqNr *int                   `json:"eventThresholdRsrqNr,omitempty"`
	InterFreqTargetList  *[]InterFreqTargetInfo `json:"interFreqTargetList,omitempty"`

	// The enumeration JobType defines Job Type in the trace. See 3GPP TS 32.422 for further  description of the values. It shall comply with the provisions defined in table 5.6.3.3-1.
	JobType JobType `json:"jobType"`

	// The enumeration LoggingIntervalMdt defines Logging Interval for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.12-1.
	LoggingDuration *LoggingDurationMdt `json:"loggingDuration,omitempty"`

	// The enumeration LoggingDurationMdt defines Logging Duration in NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.20-1.
	LoggingDurationNr *LoggingDurationNrMdt `json:"loggingDurationNr,omitempty"`

	// The enumeration LoggingIntervalMdt defines Logging Interval for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.12-1.
	LoggingInterval *LoggingIntervalMdt `json:"loggingInterval,omitempty"`

	// The enumeration LoggingIntervalNrMdt defines Logging Interval in NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.18-1.
	LoggingIntervalNr    *LoggingIntervalNrMdt   `json:"loggingIntervalNr,omitempty"`
	MbsfnAreaList        *[]MbsfnArea            `json:"mbsfnAreaList,omitempty"`
	MdtAllowedPlmnIdList *[]PlmnId               `json:"mdtAllowedPlmnIdList,omitempty"`
	MeasurementLteList   *[]MeasurementLteForMdt `json:"measurementLteList,omitempty"`
	MeasurementNrList    *[]MeasurementNrForMdt  `json:"measurementNrList,omitempty"`

	// The enumeration MeasurementPeriodLteMdt defines Measurement period LTE for MDT in the trace.  See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.16-1.
	MeasurementPeriodLte *MeasurementPeriodLteMdt `json:"measurementPeriodLte,omitempty"`

	// The enumeration LoggingDurationMdt defines Logging Duration for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.13-1.
	PositioningMethod *PositioningMethodMdt `json:"positioningMethod,omitempty"`

	// The enumeration ReportAmountMdt defines Report Amount for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.10-1.
	ReportAmount *ReportAmountMdt `json:"reportAmount,omitempty"`

	// The enumeration ReportIntervalMdt defines Report Interval for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.9-1.
	ReportInterval *ReportIntervalMdt `json:"reportInterval,omitempty"`

	// The enumeration ReportIntervalNrMdt defines Report Interval in NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.17-1.
	ReportIntervalNr *ReportIntervalNrMdt `json:"reportIntervalNr,omitempty"`

	// The enumeration ReportTypeMdt defines Report Type for logged MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.4-1.
	ReportType            *ReportTypeMdt       `json:"reportType,omitempty"`
	ReportingTriggerList  *[]ReportingTrigger  `json:"reportingTriggerList,omitempty"`
	SensorMeasurementList *[]SensorMeasurement `json:"sensorMeasurementList,omitempty"`
}

// The enumeration MeasurementLteForMdt defines Measurements used for MDT in LTE in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.5-1.
type MeasurementLteForMdt string

// The enumeration MeasurementNrForMdt defines Measurements used for MDT in NR in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.6-1.
type MeasurementNrForMdt string

// The enumeration MeasurementPeriodLteMdt defines Measurement period LTE for MDT in the trace.  See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.16-1.
type MeasurementPeriodLteMdt string

// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
type Mnc string

// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413 with the OpenAPI 'nullable: true' property.
type MncRm string

// Contain the MO Exception Data Counter.
type MoExpDataCounter struct {
	// Unsigned integer identifying the MO Exception Data Counter, as specified in clause 5.31.14.3 of 3GPP TS 23.501.
	Counter int `json:"counter"`

	// string with format 'date-time' as defined in OpenAPI.
	TimeStamp *DateTime `json:"timeStamp,omitempty"`
}

// String uniquely identifying MTC provider information.
type MtcProviderInformation string

// This represents the identifier of the N3IWF ID as specified in clause 9.3.1.57 of  3GPP TS 38.413 in hexadecimal representation. Each character in the string shall take a value  of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant  character representing the 4 most significant bits of the N3IWF ID shall appear first in the  string, and the character representing the 4 least significant bit of the N3IWF ID shall  appear last in the string.
type N3IwfId string

// Contains the Non-3GPP access user location.
type N3gaLocation struct {
	// Global Cable Identifier uniquely identifying the connection between the 5G-CRG or FN-CRG to the 5GS. See clause 28.15.4 of 3GPP TS 23.003. This shall be encoded as a string per clause 28.15.4 of 3GPP TS 23.003, and compliant with the syntax specified  in clause 2.2  of IETF RFC 7542 for the username part of a NAI. The GCI value is specified in CableLabs WR-TR-5WWC-ARCH.
	Gci *Gci `json:"gci,omitempty"`

	// string with format 'bytes' as defined in OpenAPI
	Gli *Gli `json:"gli,omitempty"`

	// REpresents the HFC Node Identifer received over NGAP.
	HfcNodeId *HfcNodeId `json:"hfcNodeId,omitempty"`

	// This IE shall contain the N3IWF identifier received over NGAP and shall be encoded as a  string of hexadecimal characters. Each character in the string shall take a value of "0"  to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant  character representing the 4 most significant bits of the N3IWF ID shall appear first in  the string, and the character representing the 4 least significant bit of the N3IWF ID  shall appear last in the string.
	N3IwfId *string `json:"n3IwfId,omitempty"`

	// Contains the tracking area identity as described in 3GPP 23.003
	N3gppTai *Tai `json:"n3gppTai,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	PortNumber *Uinteger `json:"portNumber,omitempty"`

	// Possible values are:
	// - UDP: User Datagram Protocol.
	// - TCP: Transmission Control Protocol.
	Protocol *TransportProtocol `json:"protocol,omitempty"`

	// Contain the TNAP Identifier see clause5.6.2 of 3GPP TS 23.501.
	TnapId *TnapId `json:"tnapId,omitempty"`

	// Contain the TWAP Identifier as defined in clause 4.2.8.5.3 of 3GPP TS 23.501 or the WLAN location information as defined in clause 4.5.7.2.8 of 3GPP TS 23.402.
	TwapId *TwapId `json:"twapId,omitempty"`

	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	UeIpv4Addr *Ipv4Addr `json:"ueIpv4Addr,omitempty"`

	// String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
	UeIpv6Addr *Ipv6Addr `json:"ueIpv6Addr,omitempty"`

	// Possible values are:
	// - DSL: Identifies a DSL line
	// - PON: Identifies a PON line
	W5gbanLineType *LineType `json:"w5gbanLineType,omitempty"`
}

// Contains the NCGI (NR Cell Global Identity), as described in 3GPP 23.003
type Ncgi struct {
	// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).
	Nid *Nid `json:"nid,omitempty"`

	// 36-bit string identifying an NR Cell Id as specified in clause 9.3.1.7 of 3GPP TS 38.413,  in hexadecimal representation. Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character  representing the 4 most significant bits of the Cell Id shall appear first in the string, and  the character representing the 4 least significant bit of the Cell Id shall appear last in the  string.
	NrCellId NrCellId `json:"nrCellId"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`
}

// This data type is defined in the same way as the 'Ncgi' data type, but with the  OpenAPI 'nullable: true' property.
type NcgiRm interface{}

// List of NR cell ids, with their pertaining TAIs
type NcgiTai struct {
	// List of List of NR cell ids
	CellList []Ncgi `json:"cellList"`

	// Contains the tracking area identity as described in 3GPP 23.003
	Tai Tai `json:"tai"`
}

// contains PLMN and Network identity.
type NetworkId struct {
	// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
	Mcc *Mcc `json:"mcc,omitempty"`

	// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
	Mnc *Mnc `json:"mnc,omitempty"`
}

// Identifier of a group of NFs.
type NfGroupId string

// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
type NfInstanceId openapi_types.UUID

// NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003) formatted as the following  string "set<Set ID>.sn<Service Name>.nfi<NF Instance ID>.5gc.mnc<MNC>.mcc<MCC>", or  "set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>" with  <MCC> encoded as defined in clause 5.4.2 ("Mcc" data type definition)   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.
//
//	If there are only 2 significant digits in the MNC, one "0" digit shall be inserted
//	at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$'
//
// <NID> encoded as defined in clause 5.4.2 ("Nid" data type definition)  <NFInstanceId> encoded as defined in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded as a string of characters consisting of alphabetic
//
//	characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that shall end
//	with either an alphabetic character or a digit.
type NfServiceSetId string

// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string "set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>", or  "set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>" with  <MCC> encoded as defined in clause 5.4.2 ("Mcc" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.
//
//	If there are only 2 significant digits in the MNC, one "0" digit shall be inserted
//	at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$'
//
// <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but
//
//	with lower case characters <Set ID> encoded as a string of characters consisting of
//	alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that
//	shall end with either an alphabetic character or a digit.
type NfSetId string

// Represents the NGAP cause.
type NgApCause struct {
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Group Uinteger `json:"group"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Value Uinteger `json:"value"`
}

// This represents the identifier of the ng-eNB ID as specified in clause 9.3.1.8 of  3GPP TS 38.413. The value of the ng-eNB ID shall be encoded in hexadecimal representation.  Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and  shall represent 4 bits. The padding 0 shall be added to make multiple nibbles, so the most  significant character representing the padding 0 if required together with the 4 most  significant bits of the ng-eNB ID shall appear first in the string, and the character  representing the 4 least significant bit of the ng-eNB ID (to form a nibble) shall appear last  in the string.
type NgeNbId string

// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).
type Nid string

// This data type is defined in the same way as the 'Nid' data type, but with the OpenAPI 'nullable: true' property."
type NidRm string

// It indicates the QoS Characteristics for a standardized or pre-configured 5QI for downlink and uplink.
type NonDynamic5Qi struct {
	// Unsigned integer indicating Averaging Window (see clause 5.7.3.6 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
	AverWindow *AverWindow `json:"averWindow,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501 [8])), expressed in 0.01 milliseconds.
	CnPacketDelayBudgetDl *ExtPacketDelBudget `json:"cnPacketDelayBudgetDl,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501 [8])), expressed in 0.01 milliseconds.
	CnPacketDelayBudgetUl *ExtPacketDelBudget `json:"cnPacketDelayBudgetUl,omitempty"`

	// Unsigned integer indicating Maximum Data Burst Volume (see clauses 5.7.3.7 and 5.7.4 of 3GPP TS 23.501), expressed in Bytes.
	ExtMaxDataBurstVol *ExtMaxDataBurstVol `json:"extMaxDataBurstVol,omitempty"`

	// Unsigned integer indicating Maximum Data Burst Volume (see clauses 5.7.3.7 and 5.7.4 of 3GPP TS 23.501), expressed in Bytes.
	MaxDataBurstVol *MaxDataBurstVol `json:"maxDataBurstVol,omitempty"`

	// Unsigned integer indicating the 5QI Priority Level (see clauses 5.7.3.3 and 5.7.4 of 3GPP TS 23.501, within the range 1 to 127.Values are ordered in decreasing order of priority,  i.e. with 1 as the highest priority and 127 as the lowest priority.
	PriorityLevel *N5QiPriorityLevel `json:"priorityLevel,omitempty"`
}

// The enumeration NotificationControl indicates whether notifications are requested from the RAN when the GFBR can no longer  (or again) be fulfilled for a QoS Flow during the lifetime of the QoS Flow (see clause 5.7.2.4 of 3GPP TS 23.501). It shall comply with the provisions defined in table 5.5.3.5-1.
type NotificationControl string

// This enumeration is defined in the same way as the 'NotificationControl' enumeration, but with the OpenAPI 'nullable: true' property.
type NotificationControlRm interface{}

// Possible values are:
//   - ACTIVATE: The event notification is activated.
//   - DEACTIVATE: The event notification is deactivated and shall be muted. The available
//     event(s) shall be stored.
//   - RETRIEVAL: The event notification shall be sent to the NF service consumer(s),
//     after that, is muted again.
type NotificationFlag string

// Indicates changes on a resource.
type NotifyItem struct {
	Changes []ChangeItem `json:"changes"`

	// String providing an URI formatted according to RFC 3986.
	ResourceId Uri `json:"resourceId"`
}

// 36-bit string identifying an NR Cell Id as specified in clause 9.3.1.7 of 3GPP TS 38.413,  in hexadecimal representation. Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character  representing the 4 most significant bits of the Cell Id shall appear first in the string, and  the character representing the 4 least significant bit of the Cell Id shall appear last in the  string.
type NrCellId string

// This data type is defined in the same way as the 'NrCellId' data type, but with the OpenAPI 'nullable: true' property.
type NrCellIdRm string

// Contains the NR user location.
type NrLocation struct {
	// The value represents the elapsed time in minutes since the last network contact of the mobile station. Value "0" indicates that the location information was obtained after a successful paging procedure for Active Location Retrieval when the UE is in idle mode or after a successful  NG-RAN location reporting procedure with the eNB when the UE is in connected mode. Any other value than "0" indicates that the location information is the last known one. See 3GPP TS 29.002 clause 17.7.8.
	AgeOfLocationInformation *int `json:"ageOfLocationInformation,omitempty"`

	// Refers to Calling Geodetic Location. See ITU-T Recommendation Q.763 (1999) [24] clause 3.88.2. Only the description of an ellipsoid point with uncertainty circle is allowed to be used.
	GeodeticInformation *string `json:"geodeticInformation,omitempty"`

	// Refer to geographical Information. See 3GPP TS 23.032 clause 7.3.2. Only the description of an ellipsoid point with uncertainty circle is allowed to be used.
	GeographicalInformation *string `json:"geographicalInformation,omitempty"`

	// One of the six attributes n3IwfId, gNbIdm, ngeNbId, wagfId, tngfId, eNbId shall be present.
	GlobalGnbId *GlobalRanNodeId `json:"globalGnbId,omitempty"`
	IgnoreNcgi  *bool            `json:"ignoreNcgi,omitempty"`

	// Contains the NCGI (NR Cell Global Identity), as described in 3GPP 23.003
	Ncgi Ncgi `json:"ncgi"`

	// Contains the tracking area identity as described in 3GPP 23.003
	Tai Tai `json:"tai"`

	// string with format 'date-time' as defined in OpenAPI.
	UeLocationTimestamp *DateTime `json:"ueLocationTimestamp,omitempty"`
}

// This data type is defined in the same way as the 'NrLocation' data type, but with the OpenAPI 'nullable: true' property."
type NrLocationRm interface{}

// Contains NR V2X services authorized information.
type NrV2xAuth struct {
	// Possible values are:
	// - AUTHORIZED: Indicates that the UE is authorized.
	// - NOT_AUTHORIZED: Indicates that the UE is not authorized.
	PedestrianUeAuth *UeAuth `json:"pedestrianUeAuth,omitempty"`

	// Possible values are:
	// - AUTHORIZED: Indicates that the UE is authorized.
	// - NOT_AUTHORIZED: Indicates that the UE is not authorized.
	VehicleUeAuth *UeAuth `json:"vehicleUeAuth,omitempty"`
}

// String providing a Network Slice Simultaneous Registration Group. See clause 5.15.12 of  3GPP TS 23.501
type NsSrg string

// String providing a Network Slice Simultaneous Registration Group with the OpenAPI "nullable: true" property. See clause 5.15.12 of 3GPP TS 23.501
type NsSrgRm string

// The Network Slice AS Group ID, see 3GPP TS 38.413
type NsagId int

// This data type is defined in the same way as the "NsagId" data type, but with the OpenAPI "nullable: true" property
type NsagIdRm int

// contains the Subscribed S-NSSAI subject to NSSAA procedure and the status.
type NssaaStatus struct {
	// When Snssai needs to be converted to string (e.g. when used in maps as key), the string shall be composed of one to three digits "sst" optionally followed by "-" and 6 hexadecimal digits "sd".
	Snssai Snssai `json:"snssai"`

	// Possible values are:
	// - "EAP_SUCCESS": The NSSAA status is EAP-Success.
	// - "EAP_FAILURE": The NSSAA status is EAP-Failure.
	// - "PENDING": The NSSAA status is Pending.
	Status AuthStatus `json:"status"`
}

// This data type is defined in the same way as the 'NssaaStatus' data type, but with the OpenAPI 'nullable: true' property.
type NssaaStatusRm interface{}

// JSON's null value.
type NullValue interface{}

// Contains information regarding operater  determined  barring.
type OdbData struct {
	// The enumeration RoamingOdb defines the Barring of Roaming as. See 3GPP TS 23.015 for further description. It shall comply with the provisions defined in table 5.7.3.1-1.
	RoamingOdb *RoamingOdb `json:"roamingOdb,omitempty"`
}

// The enumeration OdbPacketServices defines the Barring of Packet Oriented Services. See 3GPP TS 23.015 for further description. It shall comply with the provisions defined in table 5.7.3.2-1
type OdbPacketServices interface{}

// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
type PacketDelBudget int

// This data type is defined in the same way as the 'PacketDelBudget' data type, but with the OpenAPI 'nullable: true' property.
type PacketDelBudgetRm int

// String representing Packet Error Rate (see clause 5.7.3.5 and 5.7.4 of 3GPP TS 23.501, expressed as a "scalar x 10-k" where the scalar and the exponent k are each encoded as one decimal digit.
type PacketErrRate string

// This data type is defined in the same way as the 'PacketErrRate' data type, but with the OpenAPI 'nullable: true' property.
type PacketErrRateRm string

// Unsigned integer indicating Packet Loss Rate (see clauses 5.7.2.8 and 5.7.4 of 3GPP TS 23.501), expressed in tenth of percent.
type PacketLossRate int

// This data type is defined in the same way as the 'PacketLossRate' data type, but with the OpenAPI 'nullable: true' property.
type PacketLossRateRm int

// Possible values are:
// - "TAC": Type Allocation Code
// - "SUBPLMN": Subscriber PLMN ID
// - "GEOAREA": Geographical area, i.e. list(s) of TAI(s)
// - "SNSSAI": S-NSSAI
// - "DNN": DNN
type PartitioningCriteria string

// This data type is defined in the same way as the ' PartitioningCriteria ' data type, but with the OpenAPI 'nullable: true' property.
type PartitioningCriteriaRm interface{}

// it contains information on data to be changed.
type PatchItem struct {
	// indicates the path of the source JSON element (according to JSON Pointer syntax) being moved or copied to the location indicated by the "path" attribute.
	From *string `json:"from,omitempty"`

	// Operations as defined in IETF RFC 6902.
	Op PatchOperation `json:"op"`

	// contains a JSON pointer value (as defined in IETF RFC 6901) that references a location of a resource on which the patch operation shall be performed.
	Path  string       `json:"path"`
	Value *interface{} `json:"value,omitempty"`
}

// Operations as defined in IETF RFC 6902.
type PatchOperation string

// The execution report result on failed modification.
type PatchResult struct {
	// The execution report contains an array of report items. Each report item indicates one  failed modification.
	Report []ReportItem `json:"report"`
}

// it shall represent the PC5 Flow Bit Rates
type Pc5FlowBitRates struct {
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	GuaFbr *BitRate `json:"guaFbr,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	MaxFbr *BitRate `json:"maxFbr,omitempty"`
}

// Contains policy data on the PC5 QoS parameters.
type Pc5QoSPara struct {
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	Pc5LinkAmbr    *BitRate         `json:"pc5LinkAmbr,omitempty"`
	Pc5QosFlowList []Pc5QosFlowItem `json:"pc5QosFlowList"`
}

// Contains a PC5 QOS flow.
type Pc5QosFlowItem struct {
	// it shall represent the PC5 Flow Bit Rates
	Pc5FlowBitRates *Pc5FlowBitRates `json:"pc5FlowBitRates,omitempty"`

	// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255.
	Pqi N5Qi `json:"pqi"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Range *Uinteger `json:"range,omitempty"`
}

// Contains the PCF for the UE information necessary for the PCF for the PDU session to send  SM Policy Association Establishment and Termination events.
type PcfUeCallbackInfo struct {
	BindingInfo *string `json:"bindingInfo,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	CallbackUri Uri `json:"callbackUri"`
}

// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.
type PduSessionId int

// indicates the DNN and S-NSSAI combination of a PDU session.
type PduSessionInfo struct {
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
	Dnn Dnn `json:"dnn"`

	// When Snssai needs to be converted to string (e.g. when used in maps as key), the string shall be composed of one to three digits "sst" optionally followed by "-" and 6 hexadecimal digits "sd".
	Snssai Snssai `json:"snssai"`
}

// PduSessionType indicates the type of a PDU session. It shall comply with the provisions defined in table 5.4.3.3-1.
type PduSessionType string

// PduSessionType indicates the type of a PDU session. It shall comply with the provisions defined in table 5.4.3.3-1 but with the OpenAPI "nullable: true" property.
type PduSessionTypeRm interface{}

// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.
type Pei string

// This data type is defined in the same way as the 'Pei' data type but with the OpenAPI 'nullable: true' property.
type PeiRm string

// Integer value identifying the physical cell identity (PCI), as definition of "PhysCellId" IE  in clause 6.3.2 of 3GPP TS 38.331.
type PhysCellId int

// string with format 'bytes' as defined in OpenAPI
type PlmnAssiUeRadioCapId Bytes

// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
type PlmnId struct {
	// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
	Mcc Mcc `json:"mcc"`

	// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
	Mnc Mnc `json:"mnc"`
}

// Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN.
type PlmnIdNid struct {
	// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
	Mcc Mcc `json:"mcc"`

	// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
	Mnc Mnc `json:"mnc"`

	// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).
	Nid *Nid `json:"nid,omitempty"`
}

// This data type is defined in the same way as the 'PlmnIdNid' data type, but with the OpenAPI 'nullable: true' property.
type PlmnIdNidRm interface{}

// This data type is defined in the same way as the 'PlmnId' data type, but with the OpenAPI 'nullable: true' property.
type PlmnIdRm interface{}

// The enumeration LoggingDurationMdt defines Logging Duration for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.13-1.
type PositioningMethodMdt string

// The enumeration PreemptionCapability indicates the pre-emption capability of a request on other QoS flows. See clause 5.7.2.2 of 3GPP TS 23.501. It shall comply with the provisions defined in table 5.5.3.1-1.
type PreemptionCapability string

// This enumeration is defined in the same way as the 'PreemptionCapability' enumeration, but with the OpenAPI 'nullable: true' property.
type PreemptionCapabilityRm interface{}

// The enumeration PreemptionVulnerability indicates the pre-emption vulnerability of the QoS flow to pre-emption from other QoS flows. See clause 5.7.2.2 of 3GPP TS 23.501. It shall comply with the provisions defined in table 5.5.3.2-1
type PreemptionVulnerability string

// This enumeration is defined in the same way as the 'PreemptionVulnerability' enumeration, but with the OpenAPI 'nullable: true' property."
type PreemptionVulnerabilityRm interface{}

// If the additionalPraId IE is present, this IE shall state the presence information of the UE for the individual PRA identified by the additionalPraId IE;  If the additionalPraId IE is not present, this IE shall state the presence information of the UE for the PRA identified by the praId IE.
type PresenceInfo struct {
	// This IE may be present if the praId IE is present and if it contains a PRA identifier referring to a set of Core Network predefined Presence Reporting Areas. When present, this IE shall contain a PRA Identifier of an individual PRA within the Set of Core Network predefined Presence Reporting Areas indicated by the praId IE.
	AdditionalPraId *string `json:"additionalPraId,omitempty"`

	// Represents the list of EUTRAN cell Ids that constitutes the area. This IE shall be present if the Area of Interest subscribed is a list of EUTRAN cell Ids.
	EcgiList *[]Ecgi `json:"ecgiList,omitempty"`

	// Represents the list of NG RAN node identifiers that constitutes the area. This IE shall be present if the Area of Interest subscribed is a list of NG RAN node identifiers.
	GlobalRanNodeIdList *[]GlobalRanNodeId `json:"globalRanNodeIdList,omitempty"`

	// Represents the list of eNodeB identifiers that constitutes the area. This IE shall be  present if the Area of Interest subscribed is a list of eNodeB identifiers.
	GlobaleNbIdList *[]GlobalRanNodeId `json:"globaleNbIdList,omitempty"`

	// Represents the list of NR cell Ids that constitutes the area. This IE shall be present if the Area of Interest subscribed is a list of NR cell Ids.
	NcgiList *[]Ncgi `json:"ncgiList,omitempty"`

	// Represents an identifier of the Presence Reporting Area (see clause 28.10 of 3GPP  TS 23.003.  This IE shall be present  if the Area of Interest subscribed or reported is a Presence Reporting Area or a Set of Core Network predefined Presence Reporting Areas. When present, it shall be encoded as a string representing an integer in the following ranges: 0 to 8 388 607 for UE-dedicated PRA 8 388 608 to 16 777 215 for Core Network predefined PRA Examples: PRA ID 123 is encoded as "123" PRA ID 11 238 660 is encoded as "11238660"
	PraId *string `json:"praId,omitempty"`

	// Possible values are:
	// -IN_AREA: Indicates that the UE is inside or enters the presence reporting area.
	// -OUT_OF_AREA: Indicates that the UE is outside or leaves the presence reporting area
	// -UNKNOW: Indicates it is unknown whether the UE is in the presence reporting area or not
	// -INACTIVE: Indicates that the presence reporting area is inactive in the serving node.
	PresenceState *PresenceState `json:"presenceState,omitempty"`

	// Represents the list of tracking areas that constitutes the area. This IE shall be present if the subscription or  the event report is for tracking UE presence in the tracking areas. For non 3GPP access the TAI shall be the N3GPP TAI.
	TrackingAreaList *[]Tai `json:"trackingAreaList,omitempty"`
}

// This data type is defined in the same way as the 'PresenceInfo' data type, but with the OpenAPI 'nullable: true' property.  If the additionalPraId IE is present, this IE shall state the presence information of the UE for the individual PRA identified by the additionalPraId IE;  If the additionalPraId IE is not present, this IE shall state the presence information of the UE for the PRA identified by the praId IE.
type PresenceInfoRm struct {
	// This IE may be present if the praId IE is present and if it contains a PRA identifier referring to a set of Core Network predefined Presence Reporting Areas. When present, this IE shall contain a PRA Identifier of an individual PRA within the Set of Core Network predefined Presence Reporting Areas indicated by the praId IE.
	AdditionalPraId *string `json:"additionalPraId,omitempty"`

	// Represents the list of EUTRAN cell Ids that constitutes the area. This IE shall be present if the Area of Interest subscribed is a list of EUTRAN cell Ids.
	EcgiList *[]Ecgi `json:"ecgiList,omitempty"`

	// Represents the list of NG RAN node identifiers that constitutes the area. This IE shall be present if the Area of Interest subscribed is a list of NG RAN node identifiers.
	GlobalRanNodeIdList *[]GlobalRanNodeId `json:"globalRanNodeIdList,omitempty"`

	// Represents the list of eNodeB identifiers that constitutes the area. This IE shall be present if the Area of Interest subscribed is a list of eNodeB identifiers.
	GlobaleNbIdList *[]GlobalRanNodeId `json:"globaleNbIdList,omitempty"`

	// Represents the list of NR cell Ids that constitutes the area. This IE shall be present if the Area of Interest subscribed is a list of NR cell Ids.
	NcgiList *[]Ncgi `json:"ncgiList,omitempty"`

	// Represents an identifier of the Presence Reporting Area (see clause 28.10 of
	// 3GPP TS 23.003. This IE shall be present  if the Area of Interest subscribed or
	// reported is a Presence Reporting Area or a Set of Core Network predefined Presence
	// Reporting Areas. When present, it shall be encoded as a string representing an integer
	// in the following ranges:
	// - 0 to 8 388 607 for UE-dedicated PRA
	// - 8 388 608 to 16 777 215 for Core Network predefined PRA
	// Examples:
	// PRA ID 123 is encoded as "123"
	// PRA ID 11 238 660 is encoded as "11238660"
	PraId *string `json:"praId,omitempty"`

	// Possible values are:
	// -IN_AREA: Indicates that the UE is inside or enters the presence reporting area.
	// -OUT_OF_AREA: Indicates that the UE is outside or leaves the presence reporting area
	// -UNKNOW: Indicates it is unknown whether the UE is in the presence reporting area or not
	// -INACTIVE: Indicates that the presence reporting area is inactive in the serving node.
	PresenceState *PresenceState `json:"presenceState,omitempty"`

	// Represents the list of tracking areas that constitutes the area. This IE shall be present if the subscription or the event report  is for tracking UE presence in the tracking areas. For non 3GPP access the TAI shall be the N3GPP TAI.
	TrackingAreaList *[]Tai `json:"trackingAreaList,omitempty"`
}

// Possible values are:
// -IN_AREA: Indicates that the UE is inside or enters the presence reporting area.
// -OUT_OF_AREA: Indicates that the UE is outside or leaves the presence reporting area
// -UNKNOW: Indicates it is unknown whether the UE is in the presence reporting area or not
// -INACTIVE: Indicates that the presence reporting area is inactive in the serving node.
type PresenceState string

// Provides additional information in an error response.
type ProblemDetails struct {
	// A machine-readable application error cause specific to this occurrence of the problem.  This IE should be present and provide application-related error information, if available.
	Cause *string `json:"cause,omitempty"`

	// A human-readable explanation specific to this occurrence of the problem.
	Detail *string `json:"detail,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	Instance      *Uri            `json:"instance,omitempty"`
	InvalidParams *[]InvalidParam `json:"invalidParams,omitempty"`

	// Fully Qualified Domain Name
	NrfId  *Fqdn `json:"nrfId,omitempty"`
	Status *int  `json:"status,omitempty"`

	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures *SupportedFeatures `json:"supportedFeatures,omitempty"`
	Title             *string            `json:"title,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	Type *Uri `json:"type,omitempty"`
}

// If the contentType attribute is set to "application/json", then this attribute describes  the attributes of the JSON object of the body.
type Property struct {
	// The name of the property
	Name string `json:"name"`

	// A regular expression string to be applied to the value of the property.
	Regex *string `json:"regex,omitempty"`

	// Indicates whether the property is required – true= required –  false(default)= not required.
	Required *bool `json:"required,omitempty"`

	// The property value. When present, it shall be a valid JSON string.
	Value *string `json:"value,omitempty"`
}

// Indicates whether the UE is authorized to use ProSe Direct Discovery, ProSe Direct Communication, or both.
type ProseServiceAuth struct {
	// Possible values are:
	// - AUTHORIZED: Indicates that the UE is authorized.
	// - NOT_AUTHORIZED: Indicates that the UE is not authorized.
	ProseDirectCommunicationAuth *UeAuth `json:"proseDirectCommunicationAuth,omitempty"`

	// Possible values are:
	// - AUTHORIZED: Indicates that the UE is authorized.
	// - NOT_AUTHORIZED: Indicates that the UE is not authorized.
	ProseDirectDiscoveryAuth *UeAuth `json:"proseDirectDiscoveryAuth,omitempty"`
}

// Unsigned integer identifying a QoS flow, within the range 0 to 63.
type Qfi int

// This data type is defined in the same way as the 'Qfi' data type, but with the OpenAPI 'nullable: true' property.
type QfiRm int

// Contains QoS flows usage data information.
type QosFlowUsageReport struct {
	// string with format 'int64' as defined in OpenAPI.
	DownlinkVolume Int64 `json:"downlinkVolume"`

	// string with format 'date-time' as defined in OpenAPI.
	EndTimeStamp DateTime `json:"endTimeStamp"`

	// Unsigned integer identifying a QoS flow, within the range 0 to 63.
	Qfi Qfi `json:"qfi"`

	// string with format 'date-time' as defined in OpenAPI.
	StartTimeStamp DateTime `json:"startTimeStamp"`

	// string with format 'int64' as defined in OpenAPI.
	UplinkVolume Int64 `json:"uplinkVolume"`
}

// The enumeration QosResourceType indicates whether a QoS Flow is non-GBR, delay critical GBR, or non-delay critical GBR (see clauses 5.7.3.4 and 5.7.3.5 of 3GPP TS 23.501). It shall comply with the provisions defined in table 5.5.3.6-1.
type QosResourceType string

// This enumeration is defined in the same way as the 'QosResourceType' enumeration, but with the OpenAPI 'nullable: true' property. "
type QosResourceTypeRm interface{}

// Indicates the radio access used.
type RatType string

// Provides information about the radio access but with the OpenAPI 'nullable: true' property.
type RatTypeRm interface{}

// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
type RatingGroup Uint32

// The response shall include a Location header field containing a different URI  (pointing to a different URI of an other service instance), or the same URI if a request  is redirected to the same target resource via a different SCP.
type RedirectResponse struct {
	Cause *string `json:"cause,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	TargetScp *Uri `json:"targetScp,omitempty"`

	// String providing an URI formatted according to RFC 3986.
	TargetSepp *Uri `json:"targetSepp,omitempty"`
}

// This parameter provides information about the referenced binary body data.
type RefToBinaryData struct {
	// This IE shall contain the value of the Content-ID header of the referenced binary body part.
	ContentId string `json:"contentId"`
}

// This data type is defined in the same way as the ' RefToBinaryData ' data type, but with the OpenAPI 'nullable: true' property.
type RefToBinaryDataRm interface{}

// The enumeration ReflectiveQosAttribute indicates whether certain traffic of the QoS flow may be subject to Reflective QoS (see clause 5.7.2.3 of 3GPP TS 23.501). It shall comply with the provisions defined in table 5.5.3.3-1.
type ReflectiveQoSAttribute string

// This enumeration is defined in the same way as the 'ReflectiveQosAttribute' enumeration, but with the OpenAPI 'nullable: true' property. "
type ReflectiveQoSAttributeRm interface{}

// Relay Service Code to identify a connectivity service provided by the UE-to-Network relay.
type RelayServiceCode int

// The enumeration ReportAmountMdt defines Report Amount for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.10-1.
type ReportAmountMdt string

// The enumeration ReportIntervalMdt defines Report Interval for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.9-1.
type ReportIntervalMdt string

// The enumeration ReportIntervalNrMdt defines Report Interval in NR for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.17-1.
type ReportIntervalNrMdt string

// indicates performed modivications.
type ReportItem struct {
	// Contains a JSON pointer value (as defined in IETF RFC 6901) that references a  location of a resource to which the modification is subject.
	Path string `json:"path"`

	// A human-readable reason providing details on the reported modification failure.  The reason string should identify the operation that failed using the operation's  array index to assist in correlation of the invalid parameter with the failed  operation, e.g. "Replacement value invalid for attribute (failed operation index= 4)".
	Reason *string `json:"reason,omitempty"`
}

// The enumeration ReportTypeMdt defines Report Type for logged MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.4-1.
type ReportTypeMdt string

// The enumeration ReportingTrigger defines Reporting Triggers for MDT in the trace. See 3GPP TS 32.42] for further  description of the values. It shall comply with the provisions defined in table 5.6.3.8-1.
type ReportingTrigger string

// It contains the restriction type ALLOWED_AREAS or NOT_ALLOWED_AREAS.
type RestrictionType string

// It contains the restriction type ALLOWED_AREAS or NOT_ALLOWED_AREAS but with the OpenAPI 'nullable: true' property.
type RestrictionTypeRm interface{}

// Unsigned integer representing the "Subscriber Profile ID for RAT/Frequency Priority"  as specified in 3GPP TS 36.413.
type RfspIndex int

// Unsigned integer representing the 'Subscriber Profile ID for RAT/Frequency Priority'  as specified in 3GPP TS 36.413 with the OpenAPI 'nullable: true' property.
type RfspIndexRm int

// string with format 'bytes' as defined in OpenAPI
type RgWirelineCharacteristics Bytes

// This data type is defined in the same way as the 'RgWirelineCharacteristics' data type, but with the OpenAPI 'nullable: true' property.
type RgWirelineCharacteristicsRm interface{}

// The enumeration RoamingOdb defines the Barring of Roaming as. See 3GPP TS 23.015 for further description. It shall comply with the provisions defined in table 5.7.3.1-1.
type RoamingOdb string

// Indicates if access is allowed to a given serving network, e.g. a PLMN (MCC, MNC) or an  SNPN (MCC, MNC, NID).
type RoamingRestrictions struct {
	AccessAllowed *bool `json:"accessAllowed,omitempty"`
}

// At least one of the "ipv4Addr" attribute and the "ipv6Addr" attribute shall be included in the "RouteInformation" data type.
type RouteInformation struct {
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	Ipv4Addr *Ipv4Addr `json:"ipv4Addr,omitempty"`

	// String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
	Ipv6Addr *Ipv6Addr `json:"ipv6Addr,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	PortNumber Uinteger `json:"portNumber"`
}

// At least one of the "routeInfo" attribute and the "routeProfId" attribute shall be included in the "RouteToLocation" data type.
type RouteToLocation interface{}

// Contains a Routing Area Identification as defined in 3GPP TS 23.003, clause 4.2.
type RoutingAreaId struct {
	// Location Area Code
	Lac string `json:"lac"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`

	// Routing Area Code
	Rac string `json:"rac"`
}

// Contains the network slice status information in terms of the current number of UEs registered  with a network slice, the current number of PDU Sessions established on a network slice or both.
type SACEventStatus struct {
	// Represents threshold(s) to control the triggering of network slice reporting notifications or the information contained in the network slice reporting notification.
	ReachedNumPduSess *SACInfo `json:"reachedNumPduSess,omitempty"`

	// Represents threshold(s) to control the triggering of network slice reporting notifications or the information contained in the network slice reporting notification.
	ReachedNumUes *SACInfo `json:"reachedNumUes,omitempty"`
}

// Represents threshold(s) to control the triggering of network slice reporting notifications or the information contained in the network slice reporting notification.
type SACInfo struct {
	NumericValNumPduSess *int `json:"numericValNumPduSess,omitempty"`
	NumericValNumUes     *int `json:"numericValNumUes,omitempty"`
	PercValueNumPduSess  *int `json:"percValueNumPduSess,omitempty"`
	PercValueNumUes      *int `json:"percValueNumUes,omitempty"`
}

// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
type SamplingRatio int

// This data type is defined in the same way as the 'SamplingRatio' data type, but with the  OpenAPI 'nullable: true' property.
type SamplingRatioRm int

// Indicates the satellite backhaul used.
type SatelliteBackhaulCategory string

// Provides information about the satellite backhaul but with the OpenAPI 'nullable: true' property.
type SatelliteBackhaulCategoryRm interface{}

// Identifies time and day of the week when the UE is available for communication.
type ScheduledCommunicationTime struct {
	// Identifies the day(s) of the week. If absent, it indicates every day of the week.
	DaysOfWeek *[]DayOfWeek `json:"daysOfWeek,omitempty"`

	// String with format partial-time or full-time as defined in clause 5.6 of IETF RFC 3339. Examples, 20:15:00, 20:15:00-08:00 (for 8 hours behind UTC).
	TimeOfDayEnd *TimeOfDay `json:"timeOfDayEnd,omitempty"`

	// String with format partial-time or full-time as defined in clause 5.6 of IETF RFC 3339. Examples, 20:15:00, 20:15:00-08:00 (for 8 hours behind UTC).
	TimeOfDayStart *TimeOfDay `json:"timeOfDayStart,omitempty"`
}

// This data type is defined in the same way as the 'ScheduledCommunicationTime' data type, but with the OpenAPI 'nullable: true' property.
type ScheduledCommunicationTimeRm interface{}

// Possible values are:
// -DOWNLINK_ONLY: Downlink only
// -UPLINK_ONLY: Uplink only
// -BIDIRECTIONA: Bi-directional
type ScheduledCommunicationType string

// This enumeration is defined in the same way as the 'ScheduledCommunicationTypen' enumeration, but with the OpenAPI 'nullable: true' property."
type ScheduledCommunicationTypeRm interface{}

// A range of SDs (Slice Differentiators)
type SdRange struct {
	// Last value identifying the end of an SD range. This string shall be formatted as specified for the sd attribute of the Snssai data type in clause 5.4.4.2.
	End *string `json:"end,omitempty"`

	// First value identifying the start of an SD range. This string shall be formatted as specified for the sd attribute of the Snssai data type in clause 5.4.4.2.
	Start *string `json:"start,omitempty"`
}

// Secondary RAT Usage Information to report usage data for a secondary RAT for QoS flows and/or the whole PDU session.
type SecondaryRatUsageInfo struct {
	PduSessionUsageData *[]VolumeTimedReport  `json:"pduSessionUsageData,omitempty"`
	QosFlowsUsageData   *[]QosFlowUsageReport `json:"qosFlowsUsageData,omitempty"`

	// Indicates the radio access used.
	SecondaryRatType RatType `json:"secondaryRatType"`
}

// Secondary RAT Usage Report to report usage data for a secondary RAT for QoS flows.
type SecondaryRatUsageReport struct {
	QosFlowsUsageData []QosFlowUsageReport `json:"qosFlowsUsageData"`

	// Indicates the radio access used.
	SecondaryRatType RatType `json:"secondaryRatType"`
}

// It contains the URI of the linked resource.
type SelfLink struct {
	// It contains the URI of the linked resource.
	Self Link `json:"self"`
}

// The enumeration SensorMeasurement defines sensor measurement type for MDT in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.7-1.
type SensorMeasurement string

// Contains addressing information (IP addresses and/or FQDNs) of a server.
type ServerAddressingInfo interface{}

// Contains a Service Area Identifier as defined in 3GPP TS 23.003, clause 12.5.
type ServiceAreaId struct {
	// Location Area Code.
	Lac string `json:"lac"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`

	// Service Area Code.
	Sac string `json:"sac"`
}

// ServiceAreaRestriction defines model for ServiceAreaRestriction.
type ServiceAreaRestriction struct {
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
}

// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
type ServiceId Uint32

// MBR related to slice
type SliceMbr struct {
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	Downlink BitRate `json:"downlink"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
	Uplink BitRate `json:"uplink"`
}

// SliceMbr with nullable: true
type SliceMbrRm interface{}

// It indicates theSmall Data Rate Control Status
type SmallDataRateStatus struct {
	// When present, it shall indicate number of additional exception reports the AF is allowed to send downlink  in the given time unit for the given PDU session (see clause 5.31.14.3 in 3GPP TS 23.501
	RemainExReportsDl *int `json:"remainExReportsDl,omitempty"`

	// When present, it shall indicate number of additional exception reports the UE is allowed to send uplink in the given time  unit for  the given PDU session (see clause 5.31.14.3 of 3GPP TS 23.501.
	RemainExReportsUl *int `json:"remainExReportsUl,omitempty"`

	// When present it shall contain the number of packets the AF is allowed to send downlink in the given time unit for the given PDU session (see clause 5.31.14.3 of 3GPP TS 23.501.
	RemainPacketsDl *int `json:"remainPacketsDl,omitempty"`

	// When present, it shall contain the number of packets the UE is allowed to send uplink in the given time unit for the given PDU session (see clause 5.31.14.3 of 3GPP TS 23.501.
	RemainPacketsUl *int `json:"remainPacketsUl,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	ValidityTime *DateTime `json:"validityTime,omitempty"`
}

// When Snssai needs to be converted to string (e.g. when used in maps as key), the string shall be composed of one to three digits "sst" optionally followed by "-" and 6 hexadecimal digits "sd".
type Snssai struct {
	// 3-octet string, representing the Slice Differentiator, in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the SD shall appear first in the string, and the character representing the 4 least significant bit of the SD shall appear last in the string. This is an optional parameter that complements the Slice/Service type(s) to allow to  differentiate amongst multiple Network Slices of the same Slice/Service type. This IE shall be absent if no SD value is associated with the SST.
	Sd *string `json:"sd,omitempty"`

	// Unsigned integer, within the range 0 to 255, representing the Slice/Service Type.  It indicates the expected Network Slice behaviour in terms of features and services. Values 0 to 127 correspond to the standardized SST range. Values 128 to 255 correspond  to the Operator-specific range. See clause 28.4.2 of 3GPP TS 23.003. Standardized values are defined in clause 5.15.2.2 of 3GPP TS 23.501.
	Sst int `json:"sst"`
}

// Extensions to the Snssai data type, sdRanges and wildcardSd shall not be present simultaneously
type SnssaiExtension struct {
	// When present, it shall contain the range(s) of Slice Differentiator values supported for the Slice/Service Type value indicated in the sst attribute of the Snssai data type
	SdRanges *[]SdRange `json:"sdRanges,omitempty"`

	// When present, it shall be set to true, to indicate that all SD values are supported for the Slice/Service Type value indicated in the sst attribute of the Snssai data type.
	WildcardSd *bool `json:"wildcardSd,omitempty"`
}

// Contains the Spatial Validity Condition.
type SpatialValidityCond struct {
	Countries *[]Mcc `json:"countries,omitempty"`

	// List of geographic area or list of civic address info
	GeographicalServiceArea *GeoServiceArea `json:"geographicalServiceArea,omitempty"`
	TrackingAreaList        *[]Tai          `json:"trackingAreaList,omitempty"`
}

// Contains the Spatial Validity Condition or the null value.
type SpatialValidityCondRm interface{}

// represents the service and session continuity mode It shall comply with the provisions defined in table 5.4.3.6-1.
type SscMode string

// represents the service and session continuity mode It shall comply with the provisions defined in table 5.4.3.6-1 but with the OpenAPI 'nullable: true' property.
type SscModeRm interface{}

// Source specific IP multicast address
type Ssm struct {
	// Contains an IP adresse.
	DestIpAddr IpAddr `json:"destIpAddr"`

	// Contains an IP adresse.
	SourceIpAddr IpAddr `json:"sourceIpAddr"`
}

// Possible values are:
// - STATIONARY: Identifies the UE is stationary
// - MOBILE: Identifies the UE is mobile
type StationaryIndication string

// This enumeration is defined in the same way as the 'StationaryIndication' enumeration, but with the OpenAPI 'nullable: true' property."
type StationaryIndicationRm interface{}

// String representing the STN-SR as defined in clause 18.6 of 3GPP TS 23.003.
type StnSr string

// String representing the STN-SR as defined in clause 18.6 of 3GPP TS 23.003 with the OpenAPI 'nullable: true' property.
type StnSrRm string

// A String with Matching Operator
type StringMatchingCondition struct {
	// the matching operation.
	MatchingOperator MatchingOperator `json:"matchingOperator"`
	MatchingString   *string          `json:"matchingString,omitempty"`
}

// A list of conditions for string matching
type StringMatchingRule struct {
	StringMatchingConditions *[]StringMatchingCondition `json:"stringMatchingConditions,omitempty"`
}

// Provides the subsribed 5QI and the ARP, it may contain the priority level.
type SubscribedDefaultQos struct {
	// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255.
	N5qi N5Qi `json:"5qi"`

	// Contains Allocation and Retention Priority information.
	Arp Arp `json:"arp"`

	// Unsigned integer indicating the 5QI Priority Level (see clauses 5.7.3.3 and 5.7.4 of 3GPP TS 23.501, within the range 1 to 127.Values are ordered in decreasing order of priority,  i.e. with 1 as the highest priority and 127 as the lowest priority.
	PriorityLevel *N5QiPriorityLevel `json:"priorityLevel,omitempty"`
}

// String identifying a Supi that shall contain either an IMSI, a network specific identifier,
// a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause
// 2.2A of 3GPP TS 23.003. It shall be formatted as follows
//   - for an IMSI "imsi-<imsi>", where <imsi> shall be formatted according to clause 2.2
//     of 3GPP TS 23.003 that describes an IMSI.
//   - for a network specific identifier "nai-<nai>, where <nai> shall be formatted
//     according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.
//   - for a GCI "gci-<gci>", where <gci> shall be formatted according to clause 28.15.2
//     of 3GPP TS 23.003.
//   - for a GLI "gli-<gli>", where <gli> shall be formatted according to clause 28.16.2 of
//     3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall
//     only contain characters allowed according to the "lower-with-hyphen" naming convention
//     defined in 3GPP TS 29.501.
type Supi string

// String identifying a SUPI or a SUCI.
type SupiOrSuci string

// This data type is defined in the same way as the 'Supi' data type, but with the  OpenAPI 'nullable: true' property.
type SupiRm string

// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
type SupportedFeatures string

// 2 or 3-octet string identifying a tracking area code as specified in clause 9.3.3.10  of 3GPP TS 38.413, in hexadecimal representation. Each character in the string shall  take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the TAC shall  appear first in the string, and the character representing the 4 least significant bit  of the TAC shall appear last in the string.
type Tac string

// contains tracking area information (tracking area codes).
type TacInfo struct {
	TacList []Tac `json:"tacList"`
}

// This data type is defined in the same way as the 'Tac' data type, but with the OpenAPI 'nullable: true' property.
type TacRm string

// Contains the tracking area identity as described in 3GPP 23.003
type Tai struct {
	// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).
	Nid *Nid `json:"nid,omitempty"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`

	// 2 or 3-octet string identifying a tracking area code as specified in clause 9.3.3.10  of 3GPP TS 38.413, in hexadecimal representation. Each character in the string shall  take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the TAC shall  appear first in the string, and the character representing the 4 least significant bit  of the TAC shall appear last in the string.
	Tac Tac `json:"tac"`
}

// This data type is defined in the same way as the 'Tai' data type, but with the OpenAPI 'nullable: true' property.
type TaiRm interface{}

// String with format partial-time or full-time as defined in clause 5.6 of IETF RFC 3339. Examples, 20:15:00, 20:15:00-08:00 (for 8 hours behind UTC).
type TimeOfDay string

// String with format "time-numoffset" optionally appended by "daylightSavingTime", where
//   - "time-numoffset" shall represent the time zone adjusted for daylight saving time and be
//     encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;
//   - "daylightSavingTime" shall represent the adjustment that has been made and shall be
//     encoded as "+1" or "+2" for a +1 or +2 hours adjustment.
//
// The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time.
type TimeZone string

// "String with format 'time-numoffset' optionally appended by '<daylightSavingTime>', where
//
//   - 'time-numoffset' shall represent the time zone adjusted for daylight saving time and be
//     encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;
//
//   - 'daylightSavingTime' shall represent the adjustment that has been made and shall be
//     encoded as '+1' or '+2' for a +1 or +2 hours adjustment.
//
//     But with the OpenAPI 'nullable: true' property."
type TimeZoneRm string

// Temporary Mobile Group Identity
type Tmgi struct {
	// MBS Service ID
	MbsServiceId string `json:"mbsServiceId"`

	// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
	PlmnId PlmnId `json:"plmnId"`
}

// Contain the TNAP Identifier see clause5.6.2 of 3GPP TS 23.501.
type TnapId struct {
	// When present, it shall contain the BSSID of the access point to which the UE is attached, that is received over NGAP, see IEEE Std 802.11-2012.
	BssId *string `json:"bssId,omitempty"`

	// string with format 'bytes' as defined in OpenAPI
	CivicAddress *Bytes `json:"civicAddress,omitempty"`

	// This IE shall be present if the UE is accessing the 5GC via a trusted WLAN access network.When present, it shall contain the SSID of the access point to which the UE is attached, that is received over NGAP,  see IEEE Std 802.11-2012.
	SsId *string `json:"ssId,omitempty"`
}

// This data type is defined in the same way as the 'TnapId' data type, but with the OpenAPI 'nullable: true' property.
type TnapIdRm interface{}

// This represents the identifier of the TNGF ID as specified in clause 9.3.1.161 of  3GPP TS 38.413  in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a"  to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the  4 most significant bits of the TNGF ID shall appear first in the string, and the character  representing the 4 least significant bit of the TNGF ID shall appear last in the string.
type TngfId string

// contains Trace control and configuration parameters.
type TraceData struct {
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	CollectionEntityIpv4Addr *Ipv4Addr `json:"collectionEntityIpv4Addr,omitempty"`

	// String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
	CollectionEntityIpv6Addr *Ipv6Addr `json:"collectionEntityIpv6Addr,omitempty"`

	// Triggering events (see 3GPP TS 32.422).It shall be encoded as an octet string in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits shall appear first in the string, and the character representing the 4 least significant bit shall appear last in the string. Octets shall be coded according to 3GPP TS 32.422.
	EventList string `json:"eventList"`

	// List of Interfaces (see 3GPP TS 32.422).It shall be encoded as an octet string in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits shall appear first in the string, and the character representing the  4 least significant bit shall appear last in the string. Octets shall be coded according to 3GPP TS 32.422. If this attribute is not present, all the interfaces applicable to the list of NE types indicated in the neTypeList attribute should be traced.
	InterfaceList *string `json:"interfaceList,omitempty"`

	// List of NE Types (see 3GPP TS 32.422).It shall be encoded as an octet string in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits shall appear first in the string, and the character representing the 4 least significant bit shall appear last in the string.Octets shall be coded according to 3GPP TS 32.422.
	NeTypeList string `json:"neTypeList"`

	// The enumeration TraceDepth defines how detailed information should be recorded in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.1-1
	TraceDepth TraceDepth `json:"traceDepth"`

	// Trace Reference (see 3GPP TS 32.422).It shall be encoded as the concatenation of MCC, MNC and Trace ID as follows: 'MCC'<MNC'-'Trace ID'The Trace ID shall be encoded as a 3 octet string in hexadecimal representation. Each character in the Trace ID string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the Trace ID shall appear first  in the string, and the character representing the 4 least significant bit of the Trace ID shall appear last in the string.
	TraceRef string `json:"traceRef"`
}

// The enumeration TraceDepth defines how detailed information should be recorded in the trace. See 3GPP TS 32.422 for further description of the values. It shall comply with the provisions defined in table 5.6.3.1-1
type TraceDepth string

// This enumeration is defined in the same way as the 'TraceDepth' enumeration, but with the OpenAPI 'nullable: true' property.
type TraceDepthRm interface{}

// Possible values are:
//   - SINGLE_TRANS_UL: Uplink single packet transmission.
//   - SINGLE_TRANS_DL: Downlink single packet transmission.
//   - DUAL_TRANS_UL_FIRST: Dual packet transmission, firstly uplink packet transmission
//     with subsequent downlink packet transmission.
//   - DUAL_TRANS_DL_FIRST: Dual packet transmission, firstly downlink packet transmission
//     with subsequent uplink packet transmission.
type TrafficProfile string

// This enumeration is defined in the same way as the 'TrafficProfile' enumeration, but with the OpenAPI 'nullable: true' property.
type TrafficProfileRm interface{}

// Possible values are:
// - UDP: User Datagram Protocol.
// - TCP: Transmission Control Protocol.
type TransportProtocol string

// Tunnel address
type TunnelAddress interface{}

// Contain the TWAP Identifier as defined in clause 4.2.8.5.3 of 3GPP TS 23.501 or the WLAN location information as defined in clause 4.5.7.2.8 of 3GPP TS 23.402.
type TwapId struct {
	// When present, it shall contain the BSSID of the access point to which the UE is attached, for trusted WLAN access, see IEEE Std 802.11-2012.
	BssId *string `json:"bssId,omitempty"`

	// string with format 'bytes' as defined in OpenAPI
	CivicAddress *Bytes `json:"civicAddress,omitempty"`

	// This IE shall contain the SSID of the access point to which the UE is attached, that is received over NGAP, see IEEE Std 802.11-2012.
	SsId string `json:"ssId"`
}

// This data type is defined in the same way as the 'TwapId' data type, but with the OpenAPI 'nullable: true' property.
type TwapIdRm interface{}

// Type Allocation Code (TAC) of the UE, comprising the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes. See clause 6.2 of 3GPP TS 23.003.
type TypeAllocationCode string

// Possible values are:
// - AUTHORIZED: Indicates that the UE is authorized.
// - NOT_AUTHORIZED: Indicates that the UE is not authorized.
type UeAuth string

// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer.
type Uint16 int

// Integer where the allowed values correspond to the value range of an unsigned  16-bit integer with the OpenAPI 'nullable: true' property.
type Uint16Rm int

// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
type Uint32 int

// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer with the OpenAPI 'nullable: true' property.
type Uint32Rm int32

// Integer where the allowed values correspond to the value range of an unsigned 64-bit integer.
type Uint64 int

// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer with the OpenAPI 'nullable: true' property.
type Uint64Rm int

// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
type Uinteger int

// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property.
type UintegerRm int

// indicates whether UP confidentiality protection is required, preferred or not needed for all the traffic on the PDU Session. It shall comply with the provisions defined in table 5.4.3.5-1.
type UpConfidentiality string

// indicates whether UP integrity protection is required, preferred or not needed for all the  traffic on the PDU Session. It shall comply with the provisions defined in table 5.4.3.4-1, but with the OpenAPI 'nullable: true' property.
type UpConfidentialityRm interface{}

// indicates whether UP integrity protection is required, preferred or not needed for all the traffic on the PDU Session. It shall comply with the provisions defined in  table 5.4.3.4-1.
type UpIntegrity string

// indicates whether UP integrity protection is required, preferred or not needed for all the traffic on the PDU Session. It shall comply with the provisions defined in table 5.4.3.4-1.
type UpIntegrityRm interface{}

// Contains Userplain security information.
type UpSecurity struct {
	// indicates whether UP confidentiality protection is required, preferred or not needed for all the traffic on the PDU Session. It shall comply with the provisions defined in table 5.4.3.5-1.
	UpConfid UpConfidentiality `json:"upConfid"`

	// indicates whether UP integrity protection is required, preferred or not needed for all the traffic on the PDU Session. It shall comply with the provisions defined in  table 5.4.3.4-1.
	UpIntegr UpIntegrity `json:"upIntegr"`
}

// This data type is defined in the same way as the 'UpSecurity' data type, but with the OpenAPI 'nullable: true' property.
type UpSecurityRm interface{}

// String providing an URI formatted according to RFC 3986.
type Uri string

// String providing an URI formatted according to RFC 3986 with the OpenAPI 'nullable: true' property.
type UriRm string

// HTTP and HTTPS URI scheme.
type UriScheme string

// At least one of eutraLocation, nrLocation and n3gaLocation shall be present. Several of them may be present.
type UserLocation struct {
	// Contains the E-UTRA user location.
	EutraLocation *EutraLocation `json:"eutraLocation,omitempty"`

	// Exactly one of cgi, sai or lai shall be present.
	GeraLocation *GeraLocation `json:"geraLocation,omitempty"`

	// Contains the Non-3GPP access user location.
	N3gaLocation *N3gaLocation `json:"n3gaLocation,omitempty"`

	// Contains the NR user location.
	NrLocation *NrLocation `json:"nrLocation,omitempty"`

	// Exactly one of cgi, sai or lai shall be present.
	UtraLocation *UtraLocation `json:"utraLocation,omitempty"`
}

// Exactly one of cgi, sai or lai shall be present.
type UtraLocation interface{}

// String represents the SUPI or GPSI
type VarUeId string

// String represents the SUPI or GPSI with the OpenAPI 'nullable: true' property.
type VarUeIdRm string

// Contains Usage data information.
type VolumeTimedReport struct {
	// string with format 'int64' as defined in OpenAPI.
	DownlinkVolume Int64 `json:"downlinkVolume"`

	// string with format 'date-time' as defined in OpenAPI.
	EndTimeStamp DateTime `json:"endTimeStamp"`

	// string with format 'date-time' as defined in OpenAPI.
	StartTimeStamp DateTime `json:"startTimeStamp"`

	// string with format 'int64' as defined in OpenAPI.
	UplinkVolume Int64 `json:"uplinkVolume"`
}

// This represents the identifier of the W-AGF ID as specified in clause 9.3.1.162 of  3GPP TS 38.413 in hexadecimal representation. Each character in the string shall take a value  of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant  character representing the 4 most significant bits of the W-AGF ID shall appear first in the  string, and the character representing the 4 least significant bit of the W-AGF ID shall  appear last in the string.
type WAgfId string

// String representing the Wildcard DNN. It shall contain the string "*".
type WildcardDnn string

// String representing the Wildcard DNN. It shall contain the string '*' but with the  OpenAPI 'nullable: true' property.
type WildcardDnnRm string

// One and only one of the "globLineIds", "hfcNIds", "areaCodeB" and "areaCodeC" attributes shall be included in a WirelineArea data structure
type WirelineArea struct {
	// Values are operator specific.
	AreaCodeB *AreaCode `json:"areaCodeB,omitempty"`

	// Values are operator specific.
	AreaCodeC     *AreaCode `json:"areaCodeC,omitempty"`
	GlobalLineIds *[]Gli    `json:"globalLineIds,omitempty"`
	HfcNIds       *[]HfcNId `json:"hfcNIds,omitempty"`
}

// The "restrictionType" attribute and the "areas" attribute shall be either both present or absent.  The empty array of areas is used when service is allowed/restricted nowhere.
type WirelineServiceAreaRestriction struct {
	Areas *[]WirelineArea `json:"areas,omitempty"`

	// It contains the restriction type ALLOWED_AREAS or NOT_ALLOWED_AREAS.
	RestrictionType *RestrictionType `json:"restrictionType,omitempty"`
}

// The response shall include a Location header field containing a different URI  (pointing to a different URI of an other service instance), or the same URI if a request  is redirected to the same target resource via a different SCP.
type N307 RedirectResponse

// The response shall include a Location header field containing a different URI  (pointing to a different URI of an other service instance), or the same URI if a request  is redirected to the same target resource via a different SCP.
type N308 RedirectResponse

// Getter for additional properties for AreaScope_TacInfoPerPlmn. Returns the specified
// element and whether it was found
func (a AreaScope_TacInfoPerPlmn) Get(fieldName string) (value TacInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AreaScope_TacInfoPerPlmn
func (a *AreaScope_TacInfoPerPlmn) Set(fieldName string, value TacInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]TacInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AreaScope_TacInfoPerPlmn to handle AdditionalProperties
func (a *AreaScope_TacInfoPerPlmn) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]TacInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal TacInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AreaScope_TacInfoPerPlmn to handle AdditionalProperties
func (a AreaScope_TacInfoPerPlmn) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for MbsSecurityContext_KeyList. Returns the specified
// element and whether it was found
func (a MbsSecurityContext_KeyList) Get(fieldName string) (value MbsKeyInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for MbsSecurityContext_KeyList
func (a *MbsSecurityContext_KeyList) Set(fieldName string, value MbsKeyInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]MbsKeyInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for MbsSecurityContext_KeyList to handle AdditionalProperties
func (a *MbsSecurityContext_KeyList) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]MbsKeyInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal MbsKeyInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for MbsSecurityContext_KeyList to handle AdditionalProperties
func (a MbsSecurityContext_KeyList) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for MbsServiceInfo_MbsMediaComps. Returns the specified
// element and whether it was found
func (a MbsServiceInfo_MbsMediaComps) Get(fieldName string) (value MbsMediaCompRm, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for MbsServiceInfo_MbsMediaComps
func (a *MbsServiceInfo_MbsMediaComps) Set(fieldName string, value MbsMediaCompRm) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]MbsMediaCompRm)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for MbsServiceInfo_MbsMediaComps to handle AdditionalProperties
func (a *MbsServiceInfo_MbsMediaComps) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]MbsMediaCompRm)
		for fieldName, fieldBuf := range object {
			var fieldVal MbsMediaCompRm
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for MbsServiceInfo_MbsMediaComps to handle AdditionalProperties
func (a MbsServiceInfo_MbsMediaComps) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"ECgNUN3G8FdshL5//08AAAD//4tl95zpMwIA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "CommonData.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
