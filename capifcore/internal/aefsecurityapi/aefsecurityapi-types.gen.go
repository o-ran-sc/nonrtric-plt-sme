// Package aefsecurityapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.10.1 DO NOT EDIT.
package aefsecurityapi

import (
	externalRef1 "oransc.org/nonrtric/capifcore/internal/common29571"
	externalRef2 "oransc.org/nonrtric/capifcore/internal/securityapi"
)

// Represents authentication check request data.
type CheckAuthenticationReq struct {
	// API invoker ID assigned by the CAPIF core function to the API invoker while on-boarding the API invoker.
	ApiInvokerId string `json:"apiInvokerId"`

	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures externalRef1.SupportedFeatures `json:"supportedFeatures"`
}

// Represents authentication check response data.
type CheckAuthenticationRsp struct {
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures externalRef1.SupportedFeatures `json:"supportedFeatures"`
}

// Represents authorization revocation request data.
type RevokeAuthorizationReq struct {
	// Represents revoked authorization notification details.
	RevokeInfo externalRef2.SecurityNotification `json:"revokeInfo"`

	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures externalRef1.SupportedFeatures `json:"supportedFeatures"`
}

// Represents authorization revocation response data.
type RevokeAuthorizationRsp struct {
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures externalRef1.SupportedFeatures `json:"supportedFeatures"`
}

// PostCheckAuthenticationJSONBody defines parameters for PostCheckAuthentication.
type PostCheckAuthenticationJSONBody CheckAuthenticationReq

// PostRevokeAuthorizationJSONBody defines parameters for PostRevokeAuthorization.
type PostRevokeAuthorizationJSONBody RevokeAuthorizationReq

// PostCheckAuthenticationJSONRequestBody defines body for PostCheckAuthentication for application/json ContentType.
type PostCheckAuthenticationJSONRequestBody PostCheckAuthenticationJSONBody

// PostRevokeAuthorizationJSONRequestBody defines body for PostRevokeAuthorization for application/json ContentType.
type PostRevokeAuthorizationJSONRequestBody PostRevokeAuthorizationJSONBody
